/* Generated by Yosys 0.51+85 (git sha1 d3aec12fe, clang++ 18.1.8 -fPIC -O3) */
module uart(clk, rst, s_axis_tdata, s_axis_tvalid, s_axis_tready, m_axis_tdata, m_axis_tvalid, m_axis_tready, rxd, txd, tx_busy, rx_busy, rx_overrun_error, rx_frame_error, prescale);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire [1:0] _0032_;
  wire [1:0] _0033_;
  wire [15:0] _0034_;
  wire [7:0] _0035_;
  wire [15:0] _0036_;
  wire [7:0] _0037_;
  wire [3:0] _0038_;
  wire [1:0] _0039_;
  wire [15:0] _0040_;
  wire [7:0] _0041_;
  wire [15:0] _0042_;
  wire [7:0] _0043_;
  wire [15:0] _0044_;
  wire [7:0] _0045_;
  wire [15:0] _0046_;
  wire [7:0] _0047_;
  wire [3:0] _0048_;
  wire [1:0] _0049_;
  wire _0050_;
  wire [1:0] _0051_;
  wire [1:0] _0052_;
  wire _0053_;
  wire _0054_;
  wire [1:0] _0055_;
  wire [2:0] _0056_;
  wire _0057_;
  wire [2:0] _0058_;
  wire [1:0] _0059_;
  wire [2:0] _0060_;
  wire _0061_;
  wire _0062_;
  wire [1:0] _0063_;
  wire [1:0] _0064_;
  wire [1:0] _0065_;
  wire [2:0] _0066_;
  wire [3:0] _0067_;
  wire [3:0] _0068_;
  wire [2:0] _0069_;
  wire _0070_;
  wire _0071_;
  wire [3:0] _0072_;
  wire [3:0] _0073_;
  wire [3:0] _0074_;
  wire [3:0] _0075_;
  wire [3:0] _0076_;
  wire [3:0] _0077_;
  wire [18:0] _0078_;
  wire [18:0] _0079_;
  wire [18:0] _0080_;
  wire [18:0] _0081_;
  wire [18:0] _0082_;
  wire [18:0] _0083_;
  wire [7:0] _0084_;
  wire [7:0] _0085_;
  wire [7:0] _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire [8:0] _0098_;
  wire [8:0] _0099_;
  wire _0100_;
  wire [3:0] _0101_;
  wire [3:0] _0102_;
  wire [3:0] _0103_;
  wire [3:0] _0104_;
  wire [18:0] _0105_;
  wire [18:0] _0106_;
  wire [18:0] _0107_;
  wire [18:0] _0108_;
  wire [18:0] _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire [8:0] _0113_;
  wire [31:0] _0114_;
  wire [31:0] _0115_;
  wire [31:0] _0116_;
  wire _0117_;
  wire [31:0] _0118_;
  wire [31:0] _0119_;
  wire [31:0] _0120_;
  wire [31:0] _0121_;
  wire [31:0] _0122_;
  wire [31:0] _0123_;
  wire [31:0] _0124_;
  wire [31:0] _0125_;
  wire [31:0] _0126_;
  wire [31:0] _0127_;
  wire [31:0] _0128_;
  wire [31:0] _0129_;
  wire [31:0] _0130_;
  wire [31:0] _0131_;
  wire [31:0] _0132_;
  wire [31:0] _0133_;
  wire [31:0] _0134_;
  wire _0135_;
  wire [31:0] _0136_;
  wire [31:0] _0137_;
  wire [31:0] _0138_;
  wire _0139_;
  wire [31:0] _0140_;
  wire [31:0] _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  input clk;
  wire clk;
  output [7:0] m_axis_tdata;
  wire [7:0] m_axis_tdata;
  input m_axis_tready;
  wire m_axis_tready;
  output m_axis_tvalid;
  wire m_axis_tvalid;
  input [15:0] prescale;
  wire [15:0] prescale;
  input rst;
  wire rst;
  output rx_busy;
  wire rx_busy;
  output rx_frame_error;
  wire rx_frame_error;
  output rx_overrun_error;
  wire rx_overrun_error;
  input rxd;
  wire rxd;
  input [7:0] s_axis_tdata;
  wire [7:0] s_axis_tdata;
  output s_axis_tready;
  wire s_axis_tready;
  input s_axis_tvalid;
  wire s_axis_tvalid;
  output tx_busy;
  wire tx_busy;
  output txd;
  wire txd;
  reg [3:0] \uart_rx_inst.bit_cnt  = 4'h0;
  wire \uart_rx_inst.busy ;
  reg \uart_rx_inst.busy_reg  = 1'h0;
  wire \uart_rx_inst.clk ;
  reg [7:0] \uart_rx_inst.data_reg  = 8'h00;
  wire \uart_rx_inst.frame_error ;
  reg \uart_rx_inst.frame_error_reg  = 1'h0;
  wire [7:0] \uart_rx_inst.m_axis_tdata ;
  reg [7:0] \uart_rx_inst.m_axis_tdata_reg  = 8'h00;
  wire \uart_rx_inst.m_axis_tready ;
  wire \uart_rx_inst.m_axis_tvalid ;
  reg \uart_rx_inst.m_axis_tvalid_reg  = 1'h0;
  wire \uart_rx_inst.overrun_error ;
  reg \uart_rx_inst.overrun_error_reg  = 1'h0;
  wire [15:0] \uart_rx_inst.prescale ;
  reg [18:0] \uart_rx_inst.prescale_reg  = 19'h00000;
  wire \uart_rx_inst.rst ;
  wire \uart_rx_inst.rxd ;
  reg \uart_rx_inst.rxd_reg  = 1'h1;
  reg [3:0] \uart_tx_inst.bit_cnt  = 4'h0;
  wire \uart_tx_inst.busy ;
  reg \uart_tx_inst.busy_reg  = 1'h0;
  wire \uart_tx_inst.clk ;
  reg [8:0] \uart_tx_inst.data_reg  = 9'h000;
  wire [15:0] \uart_tx_inst.prescale ;
  reg [18:0] \uart_tx_inst.prescale_reg  = 19'h00000;
  wire \uart_tx_inst.rst ;
  wire [7:0] \uart_tx_inst.s_axis_tdata ;
  wire \uart_tx_inst.s_axis_tready ;
  reg \uart_tx_inst.s_axis_tready_reg  = 1'h0;
  wire \uart_tx_inst.s_axis_tvalid ;
  wire \uart_tx_inst.txd ;
  reg \uart_tx_inst.txd_reg  = 1'h1;
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [0] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [0] <= _0083_[0];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [1] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [1] <= _0083_[1];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [2] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [2] <= _0083_[2];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [3] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [3] <= _0083_[3];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [4] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [4] <= _0083_[4];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [5] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [5] <= _0083_[5];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [6] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [6] <= _0083_[6];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [7] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [7] <= _0083_[7];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [8] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [8] <= _0083_[8];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [9] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [9] <= _0083_[9];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [10] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [10] <= _0083_[10];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [11] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [11] <= _0083_[11];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [12] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [12] <= _0083_[12];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [13] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [13] <= _0083_[13];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [14] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [14] <= _0083_[14];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [15] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [15] <= _0083_[15];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [16] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [16] <= _0083_[16];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [17] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [17] <= _0083_[17];
  always @(posedge clk)
    if (rst) \uart_rx_inst.prescale_reg [18] <= 1'h0;
    else if (_0019_) \uart_rx_inst.prescale_reg [18] <= _0083_[18];
  always @(posedge clk)
    if (rst) \uart_rx_inst.bit_cnt [0] <= 1'h0;
    else if (_0017_) \uart_rx_inst.bit_cnt [0] <= _0077_[0];
  always @(posedge clk)
    if (rst) \uart_rx_inst.bit_cnt [1] <= 1'h0;
    else if (_0017_) \uart_rx_inst.bit_cnt [1] <= _0077_[1];
  always @(posedge clk)
    if (rst) \uart_rx_inst.bit_cnt [2] <= 1'h0;
    else if (_0017_) \uart_rx_inst.bit_cnt [2] <= _0077_[2];
  always @(posedge clk)
    if (rst) \uart_rx_inst.bit_cnt [3] <= 1'h0;
    else if (_0017_) \uart_rx_inst.bit_cnt [3] <= _0077_[3];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [0] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [0] <= _0109_[0];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [1] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [1] <= _0109_[1];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [2] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [2] <= _0109_[2];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [3] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [3] <= _0109_[3];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [4] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [4] <= _0109_[4];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [5] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [5] <= _0109_[5];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [6] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [6] <= _0109_[6];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [7] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [7] <= _0109_[7];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [8] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [8] <= _0109_[8];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [9] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [9] <= _0109_[9];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [10] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [10] <= _0109_[10];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [11] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [11] <= _0109_[11];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [12] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [12] <= _0109_[12];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [13] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [13] <= _0109_[13];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [14] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [14] <= _0109_[14];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [15] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [15] <= _0109_[15];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [16] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [16] <= _0109_[16];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [17] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [17] <= _0109_[17];
  always @(posedge clk)
    if (rst) \uart_tx_inst.prescale_reg [18] <= 1'h0;
    else if (_0011_) \uart_tx_inst.prescale_reg [18] <= _0109_[18];
  always @(posedge clk)
    if (_0021_) \uart_rx_inst.frame_error_reg  <= 1'h0;
    else \uart_rx_inst.frame_error_reg  <= _0027_;
  always @(posedge clk)
    if (rst) \uart_tx_inst.busy_reg  <= 1'h0;
    else if (_0013_) \uart_tx_inst.busy_reg  <= s_axis_tvalid;
  always @(posedge clk)
    if (_0020_) \uart_tx_inst.s_axis_tready_reg  <= 1'h0;
    else if (!_0031_) \uart_tx_inst.s_axis_tready_reg  <= _0100_;
  always @(posedge clk)
    if (rst) \uart_tx_inst.bit_cnt [0] <= 1'h0;
    else if (_0014_) \uart_tx_inst.bit_cnt [0] <= _0104_[0];
  always @(posedge clk)
    if (rst) \uart_tx_inst.bit_cnt [1] <= 1'h0;
    else if (_0014_) \uart_tx_inst.bit_cnt [1] <= _0104_[1];
  always @(posedge clk)
    if (rst) \uart_tx_inst.bit_cnt [2] <= 1'h0;
    else if (_0014_) \uart_tx_inst.bit_cnt [2] <= _0104_[2];
  always @(posedge clk)
    if (rst) \uart_tx_inst.bit_cnt [3] <= 1'h0;
    else if (_0014_) \uart_tx_inst.bit_cnt [3] <= _0104_[3];
  always @(posedge clk)
    if (rst) \uart_tx_inst.txd_reg  <= 1'h1;
    else if (_0014_) \uart_tx_inst.txd_reg  <= _0112_;
  always @(posedge clk)
    if (_0022_) \uart_rx_inst.overrun_error_reg  <= 1'h0;
    else \uart_rx_inst.overrun_error_reg  <= \uart_rx_inst.m_axis_tvalid_reg ;
  always @(posedge clk)
    if (rst) \uart_rx_inst.rxd_reg  <= 1'h1;
    else \uart_rx_inst.rxd_reg  <= rxd;
  always @(posedge clk)
    if (rst) \uart_rx_inst.busy_reg  <= 1'h0;
    else if (_0015_) \uart_rx_inst.busy_reg  <= _0027_;
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tvalid_reg  <= 1'h0;
    else \uart_rx_inst.m_axis_tvalid_reg  <= _0093_;
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [0] <= _0086_[0];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [1] <= _0086_[1];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [2] <= _0086_[2];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [3] <= _0086_[3];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [4] <= _0086_[4];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [5] <= _0086_[5];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [6] <= _0086_[6];
  always @(posedge clk)
    if (_0018_) \uart_rx_inst.data_reg [7] <= _0086_[7];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [0] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [0] <= \uart_rx_inst.data_reg [0];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [1] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [1] <= \uart_rx_inst.data_reg [1];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [2] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [2] <= \uart_rx_inst.data_reg [2];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [3] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [3] <= \uart_rx_inst.data_reg [3];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [4] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [4] <= \uart_rx_inst.data_reg [4];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [5] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [5] <= \uart_rx_inst.data_reg [5];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [6] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [6] <= \uart_rx_inst.data_reg [6];
  always @(posedge clk)
    if (rst) \uart_rx_inst.m_axis_tdata_reg [7] <= 1'h0;
    else if (_0016_) \uart_rx_inst.m_axis_tdata_reg [7] <= \uart_rx_inst.data_reg [7];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [0] <= _0099_[0];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [1] <= _0099_[1];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [2] <= _0099_[2];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [3] <= _0099_[3];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [4] <= _0099_[4];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [5] <= _0099_[5];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [6] <= _0099_[6];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [7] <= _0099_[7];
  always @(posedge clk)
    if (_0012_) \uart_tx_inst.data_reg [8] <= _0099_[8];
  assign _0128_[3] = ~prescale[0];
  assign _0137_[17] = ~\uart_tx_inst.prescale_reg [17];
  assign _0137_[9] = ~\uart_tx_inst.prescale_reg [9];
  assign _0137_[11] = ~\uart_tx_inst.prescale_reg [11];
  assign _0137_[1] = ~\uart_tx_inst.prescale_reg [1];
  assign _0137_[3] = ~\uart_tx_inst.prescale_reg [3];
  assign _0137_[2] = ~\uart_tx_inst.prescale_reg [2];
  assign _0119_[2] = ~\uart_rx_inst.bit_cnt [2];
  assign _0119_[3] = ~\uart_rx_inst.bit_cnt [3];
  assign _0115_[16] = ~\uart_rx_inst.prescale_reg [16];
  assign _0115_[18] = ~\uart_rx_inst.prescale_reg [18];
  assign _0115_[8] = ~\uart_rx_inst.prescale_reg [8];
  assign _0115_[11] = ~\uart_rx_inst.prescale_reg [11];
  assign _0115_[14] = ~\uart_rx_inst.prescale_reg [14];
  assign _0115_[15] = ~\uart_rx_inst.prescale_reg [15];
  assign _0115_[6] = ~\uart_rx_inst.prescale_reg [6];
  assign _0115_[2] = ~\uart_rx_inst.prescale_reg [2];
  assign _0115_[1] = ~\uart_rx_inst.prescale_reg [1];
  assign _0133_[1] = ~\uart_tx_inst.bit_cnt [1];
  assign _0133_[2] = ~\uart_tx_inst.bit_cnt [2];
  assign _0133_[3] = ~\uart_tx_inst.bit_cnt [3];
  assign _0128_[18] = ~prescale[15];
  assign _0128_[16] = ~prescale[13];
  assign _0128_[17] = ~prescale[14];
  assign _0128_[8] = ~prescale[5];
  assign _0128_[9] = ~prescale[6];
  assign _0128_[10] = ~prescale[7];
  assign _0128_[11] = ~prescale[8];
  assign _0128_[12] = ~prescale[9];
  assign _0128_[14] = ~prescale[11];
  assign _0128_[15] = ~prescale[12];
  assign _0128_[4] = ~prescale[1];
  assign _0128_[5] = ~prescale[2];
  assign _0128_[6] = ~prescale[3];
  assign _0128_[7] = ~prescale[4];
  assign _0137_[18] = ~\uart_tx_inst.prescale_reg [18];
  assign _0137_[16] = ~\uart_tx_inst.prescale_reg [16];
  assign _0137_[8] = ~\uart_tx_inst.prescale_reg [8];
  assign _0137_[10] = ~\uart_tx_inst.prescale_reg [10];
  assign _0137_[12] = ~\uart_tx_inst.prescale_reg [12];
  assign _0137_[13] = ~\uart_tx_inst.prescale_reg [13];
  assign _0137_[14] = ~\uart_tx_inst.prescale_reg [14];
  assign _0137_[15] = ~\uart_tx_inst.prescale_reg [15];
  assign _0137_[4] = ~\uart_tx_inst.prescale_reg [4];
  assign _0137_[5] = ~\uart_tx_inst.prescale_reg [5];
  assign _0137_[6] = ~\uart_tx_inst.prescale_reg [6];
  assign _0137_[7] = ~\uart_tx_inst.prescale_reg [7];
  assign _0137_[0] = ~\uart_tx_inst.prescale_reg [0];
  assign _0134_[0] = ~\uart_tx_inst.bit_cnt [0];
  assign _0115_[0] = ~\uart_rx_inst.prescale_reg [0];
  assign _0115_[3] = ~\uart_rx_inst.prescale_reg [3];
  assign _0115_[4] = ~\uart_rx_inst.prescale_reg [4];
  assign _0115_[5] = ~\uart_rx_inst.prescale_reg [5];
  assign _0115_[7] = ~\uart_rx_inst.prescale_reg [7];
  assign _0115_[9] = ~\uart_rx_inst.prescale_reg [9];
  assign _0115_[10] = ~\uart_rx_inst.prescale_reg [10];
  assign _0128_[13] = ~prescale[10];
  assign _0115_[12] = ~\uart_rx_inst.prescale_reg [12];
  assign _0115_[13] = ~\uart_rx_inst.prescale_reg [13];
  assign _0115_[17] = ~\uart_rx_inst.prescale_reg [17];
  assign _0119_[1] = ~\uart_rx_inst.bit_cnt [1];
  assign _0119_[0] = ~\uart_rx_inst.bit_cnt [0];
  assign _0134_[31] = ~_0132_[31];
  assign _0138_[31] = ~_0136_[31];
  assign _0131_[31] = ~_0130_[31];
  assign _0124_[31] = ~_0123_[31];
  assign _0122_[31] = ~_0121_[31];
  assign _0120_[31] = ~_0118_[31];
  assign _0116_[31] = ~_0114_[31];
  assign _0032_[0] = _0094_ |  _0096_;
  assign _0032_[1] = _0095_ |  _0069_[2];
  assign _0001_ = _0032_[0] |  _0032_[1];
  assign _0033_[0] = _0119_[0] |  \uart_rx_inst.bit_cnt [1];
  assign _0033_[1] = \uart_rx_inst.bit_cnt [2] |  \uart_rx_inst.bit_cnt [3];
  assign _0026_ = _0033_[0] |  _0033_[1];
  assign _0011_ = _0000_ &  _0001_;
  assign _0035_[0] = _0034_[0] &  _0034_[1];
  assign _0036_[0] = _0137_[0] &  _0137_[1];
  assign _0037_[0] = _0036_[0] &  _0036_[1];
  assign _0038_[0] = _0037_[0] &  _0037_[1];
  assign _0039_[0] = _0038_[0] &  _0038_[1];
  assign _0139_ = _0039_[0] &  _0037_[4];
  assign _0041_[0] = _0040_[0] &  _0040_[1];
  assign _0042_[1] = _0119_[2] &  \uart_rx_inst.bit_cnt [3];
  assign _0043_[0] = _0040_[0] &  _0042_[1];
  assign _0044_[0] = _0119_[0] &  _0119_[1];
  assign _0045_[0] = _0044_[0] &  _0040_[1];
  assign _0046_[0] = _0115_[0] &  _0115_[1];
  assign _0046_[2] = _0115_[4] &  _0115_[5];
  assign _0046_[3] = _0115_[6] &  _0115_[7];
  assign _0047_[0] = _0046_[0] &  _0046_[1];
  assign _0047_[1] = _0046_[2] &  _0046_[3];
  assign _0047_[2] = _0046_[4] &  _0046_[5];
  assign _0047_[3] = _0046_[6] &  _0046_[7];
  assign _0047_[4] = _0046_[8] &  _0115_[18];
  assign _0048_[0] = _0047_[0] &  _0047_[1];
  assign _0048_[1] = _0047_[2] &  _0047_[3];
  assign _0049_[0] = _0048_[0] &  _0048_[1];
  assign _0117_ = _0049_[0] &  _0047_[4];
  assign _0019_ = _0010_ &  _0009_;
  assign _0050_ = _0066_[0] |  _0066_[1];
  assign _0010_ = _0050_ |  _0027_;
  assign _0051_[1] = _0025_ |  _0066_[1];
  assign _0009_ = _0051_[0] |  _0051_[1];
  assign _0052_[0] = _0008_ &  _0007_;
  assign _0052_[1] = _0006_ &  _0028_;
  assign _0053_ = _0052_[0] &  _0052_[1];
  assign _0018_ = _0053_ &  _0023_;
  assign _0008_ = _0029_ |  _0025_;
  assign _0007_ = _0051_[0] |  _0025_;
  assign _0054_ = _0006_ &  _0005_;
  assign _0017_ = _0054_ &  _0028_;
  assign _0006_ = _0066_[0] |  _0027_;
  assign _0055_[0] = _0068_[0] |  _0067_[0];
  assign _0055_[1] = _0067_[1] |  _0025_;
  assign _0005_ = _0055_[0] |  _0055_[1];
  assign _0056_[0] = _0030_ &  _0029_;
  assign _0056_[1] = _0028_ &  _0068_[0];
  assign _0056_[2] = _0066_[0] &  \uart_rx_inst.rxd_reg ;
  assign _0057_ = _0056_[0] &  _0056_[1];
  assign _0016_ = _0057_ &  _0056_[2];
  assign _0015_ = _0028_ &  _0025_;
  assign _0058_[0] = rst |  _0027_;
  assign _0058_[1] = _0026_ |  _0025_;
  assign _0051_[0] = _0067_[0] |  _0067_[1];
  assign _0059_[0] = _0058_[0] |  _0058_[1];
  assign _0059_[1] = _0051_[0] |  _0066_[1];
  assign _0022_ = _0059_[0] |  _0059_[1];
  assign _0060_[0] = rst |  _0026_;
  assign _0060_[1] = _0025_ |  _0067_[0];
  assign _0060_[2] = _0067_[1] |  _0066_[1];
  assign _0061_ = _0060_[0] |  _0060_[1];
  assign _0021_ = _0061_ |  _0060_[2];
  assign _0062_ = _0004_ &  _0024_;
  assign _0014_ = _0062_ &  _0002_;
  assign _0004_ = _0032_[0] |  _0095_;
  assign _0020_ = rst |  _0069_[2];
  assign _0013_ = _0024_ &  _0095_;
  assign _0063_[0] = _0024_ &  _0023_;
  assign _0063_[1] = _0003_ &  _0002_;
  assign _0012_ = _0063_[0] &  _0063_[1];
  assign _0003_ = _0096_ |  _0095_;
  assign _0064_[0] = _0134_[0] |  \uart_tx_inst.bit_cnt [1];
  assign _0070_ = _0064_[0] |  _0064_[1];
  assign _0002_ = s_axis_tvalid |  _0031_;
  assign _0000_ = _0002_ |  _0069_[2];
  assign _0065_[0] = \uart_tx_inst.bit_cnt [0] |  \uart_tx_inst.bit_cnt [1];
  assign _0064_[1] = \uart_tx_inst.bit_cnt [2] |  \uart_tx_inst.bit_cnt [3];
  assign _0031_ = _0065_[0] |  _0064_[1];
  assign _0068_[0] = ~ _0026_;
  assign _0094_ = ~ _0070_;
  assign _0097_ = ~ \uart_tx_inst.s_axis_tready_reg ;
  assign _0095_ = ~ _0031_;
  assign _0071_ = \uart_rx_inst.m_axis_tvalid_reg  &  m_axis_tready;
  assign _0082_[2] = _0025_ ?  _0078_[2] : _0081_[2];
  assign _0082_[3] = _0025_ ?  _0078_[3] : _0081_[3];
  assign _0082_[4] = _0025_ ?  _0078_[4] : _0081_[4];
  assign _0082_[5] = _0025_ ?  _0078_[5] : _0081_[5];
  assign _0082_[6] = _0025_ ?  _0078_[6] : _0081_[6];
  assign _0082_[7] = _0025_ ?  _0078_[7] : _0081_[7];
  assign _0082_[8] = _0025_ ?  _0078_[8] : _0081_[8];
  assign _0082_[9] = _0025_ ?  _0078_[9] : _0081_[9];
  assign _0082_[10] = _0025_ ?  _0078_[10] : _0081_[10];
  assign _0082_[11] = _0025_ ?  _0078_[11] : _0081_[11];
  assign _0082_[12] = _0025_ ?  _0078_[12] : _0081_[12];
  assign _0082_[13] = _0025_ ?  _0078_[13] : _0081_[13];
  assign _0082_[14] = _0025_ ?  _0078_[14] : _0081_[14];
  assign _0082_[15] = _0025_ ?  _0078_[15] : _0081_[15];
  assign _0082_[16] = _0025_ ?  _0078_[16] : _0081_[16];
  assign _0082_[17] = _0025_ ?  _0078_[17] : _0081_[17];
  assign _0082_[18] = _0025_ ?  _0078_[18] : _0081_[18];
  assign _0081_[2] = _0029_ ?  _0079_[2] : _0027_;
  assign _0081_[3] = _0029_ ?  _0079_[3] : _0080_[3];
  assign _0081_[4] = _0029_ ?  _0079_[4] : _0080_[4];
  assign _0081_[5] = _0029_ ?  _0079_[5] : _0080_[5];
  assign _0081_[6] = _0029_ ?  _0079_[6] : _0080_[6];
  assign _0081_[7] = _0029_ ?  _0079_[7] : _0080_[7];
  assign _0081_[8] = _0029_ ?  _0079_[8] : _0080_[8];
  assign _0081_[9] = _0029_ ?  _0079_[9] : _0080_[9];
  assign _0081_[10] = _0029_ ?  _0079_[10] : _0080_[10];
  assign _0081_[11] = _0029_ ?  _0079_[11] : _0080_[11];
  assign _0081_[12] = _0029_ ?  _0079_[12] : _0080_[12];
  assign _0081_[13] = _0029_ ?  _0079_[13] : _0080_[13];
  assign _0081_[14] = _0029_ ?  _0079_[14] : _0080_[14];
  assign _0081_[15] = _0029_ ?  _0079_[15] : _0080_[15];
  assign _0081_[16] = _0029_ ?  _0079_[16] : _0080_[16];
  assign _0081_[17] = _0029_ ?  _0079_[17] : _0080_[17];
  assign _0081_[18] = _0029_ ?  _0079_[18] : _0080_[18];
  assign _0027_ = ~ \uart_rx_inst.rxd_reg ;
  assign _0080_[3] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0128_[3];
  assign _0080_[4] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[4];
  assign _0080_[5] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[5];
  assign _0080_[6] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[6];
  assign _0080_[7] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[7];
  assign _0080_[8] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[8];
  assign _0080_[9] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[9];
  assign _0080_[10] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[10];
  assign _0080_[11] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[11];
  assign _0080_[12] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[12];
  assign _0080_[13] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[13];
  assign _0080_[14] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[14];
  assign _0080_[15] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[15];
  assign _0080_[16] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[16];
  assign _0080_[17] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[17];
  assign _0080_[18] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0129_[18];
  assign _0079_[2] = _0030_ ?  1'hx : 1'h1;
  assign _0079_[3] = _0030_ ?  1'hx : _0128_[3];
  assign _0079_[4] = _0030_ ?  1'hx : _0129_[4];
  assign _0079_[5] = _0030_ ?  1'hx : _0129_[5];
  assign _0079_[6] = _0030_ ?  1'hx : _0129_[6];
  assign _0079_[7] = _0030_ ?  1'hx : _0129_[7];
  assign _0079_[8] = _0030_ ?  1'hx : _0129_[8];
  assign _0079_[9] = _0030_ ?  1'hx : _0129_[9];
  assign _0079_[10] = _0030_ ?  1'hx : _0129_[10];
  assign _0079_[11] = _0030_ ?  1'hx : _0129_[11];
  assign _0079_[12] = _0030_ ?  1'hx : _0129_[12];
  assign _0079_[13] = _0030_ ?  1'hx : _0129_[13];
  assign _0079_[14] = _0030_ ?  1'hx : _0129_[14];
  assign _0079_[15] = _0030_ ?  1'hx : _0129_[15];
  assign _0079_[16] = _0030_ ?  1'hx : _0129_[16];
  assign _0079_[17] = _0030_ ?  1'hx : _0129_[17];
  assign _0079_[18] = _0030_ ?  1'hx : _0129_[18];
  assign _0078_[2] = \uart_rx_inst.rxd_reg  ?  1'hx : _0128_[3];
  assign _0078_[3] = \uart_rx_inst.rxd_reg  ?  1'hx : _0129_[4];
  assign _0078_[4] = \uart_rx_inst.rxd_reg  ?  1'hx : _0129_[5];
  assign _0078_[5] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[5];
  assign _0078_[6] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[6];
  assign _0078_[7] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[7];
  assign _0078_[8] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[8];
  assign _0078_[9] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[9];
  assign _0078_[10] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[10];
  assign _0078_[11] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[11];
  assign _0078_[12] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[12];
  assign _0078_[13] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[13];
  assign _0078_[14] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[14];
  assign _0078_[15] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[15];
  assign _0078_[16] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[16];
  assign _0078_[17] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[17];
  assign _0078_[18] = \uart_rx_inst.rxd_reg  ?  1'hx : _0131_[31];
  assign _0077_[0] = _0025_ ?  _0072_[2] : _0076_[0];
  assign _0077_[1] = _0025_ ?  _0072_[3] : _0076_[1];
  assign _0077_[2] = _0025_ ?  _0072_[2] : _0076_[2];
  assign _0077_[3] = _0025_ ?  _0072_[3] : _0076_[3];
  assign _0076_[0] = _0029_ ?  _0074_[0] : _0075_[0];
  assign _0076_[1] = _0029_ ?  _0074_[1] : _0075_[1];
  assign _0076_[2] = _0029_ ?  _0074_[2] : _0075_[2];
  assign _0076_[3] = _0029_ ?  _0074_[3] : _0075_[3];
  assign _0075_[0] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0119_[0];
  assign _0075_[1] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0122_[1];
  assign _0075_[2] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0122_[2];
  assign _0075_[3] = \uart_rx_inst.rxd_reg  ?  1'h0 : _0124_[3];
  assign _0074_[0] = _0030_ ?  _0073_[0] : _0119_[0];
  assign _0074_[1] = _0030_ ?  _0073_[1] : _0122_[1];
  assign _0074_[2] = _0030_ ?  _0073_[2] : _0122_[2];
  assign _0074_[3] = _0030_ ?  _0073_[3] : _0124_[3];
  assign _0073_[0] = _0026_ ?  1'hx : _0119_[0];
  assign _0073_[1] = _0026_ ?  1'hx : _0122_[1];
  assign _0073_[2] = _0026_ ?  1'hx : _0122_[2];
  assign _0073_[3] = _0026_ ?  1'hx : _0124_[3];
  assign _0072_[3] = \uart_rx_inst.rxd_reg  ?  1'hx : 1'h1;
  assign _0072_[2] = \uart_rx_inst.rxd_reg  ?  1'hx : 1'h0;
  assign _0112_ = _0031_ ?  _0111_ : _0103_[2];
  assign _0111_ = _0135_ ?  _0110_ : \uart_tx_inst.data_reg [0];
  assign _0110_ = _0070_ ?  1'hx : 1'h1;
  assign _0109_[0] = _0024_ ?  _0108_[2] : _0137_[0];
  assign _0109_[1] = _0024_ ?  _0108_[2] : _0141_[1];
  assign _0109_[2] = _0024_ ?  _0108_[2] : _0141_[2];
  assign _0109_[3] = _0024_ ?  _0108_[3] : _0141_[3];
  assign _0109_[4] = _0024_ ?  _0108_[4] : _0141_[4];
  assign _0109_[5] = _0024_ ?  _0108_[5] : _0141_[5];
  assign _0109_[6] = _0024_ ?  _0108_[6] : _0141_[6];
  assign _0109_[7] = _0024_ ?  _0108_[7] : _0141_[7];
  assign _0109_[8] = _0024_ ?  _0108_[8] : _0141_[8];
  assign _0109_[9] = _0024_ ?  _0108_[9] : _0141_[9];
  assign _0109_[10] = _0024_ ?  _0108_[10] : _0141_[10];
  assign _0109_[11] = _0024_ ?  _0108_[11] : _0141_[11];
  assign _0109_[12] = _0024_ ?  _0108_[12] : _0141_[12];
  assign _0109_[13] = _0024_ ?  _0108_[13] : _0141_[13];
  assign _0109_[14] = _0024_ ?  _0108_[14] : _0141_[14];
  assign _0109_[15] = _0024_ ?  _0108_[15] : _0141_[15];
  assign _0109_[16] = _0024_ ?  _0108_[16] : _0141_[16];
  assign _0109_[17] = _0024_ ?  _0108_[17] : _0141_[17];
  assign _0109_[18] = _0024_ ?  _0108_[18] : _0141_[18];
  assign _0108_[2] = _0031_ ?  _0106_[2] : _0098_[8];
  assign _0108_[3] = _0031_ ?  _0106_[3] : _0107_[3];
  assign _0108_[4] = _0031_ ?  _0106_[4] : _0107_[4];
  assign _0108_[5] = _0031_ ?  _0106_[5] : _0107_[5];
  assign _0108_[6] = _0031_ ?  _0106_[6] : _0107_[6];
  assign _0108_[7] = _0031_ ?  _0106_[7] : _0107_[7];
  assign _0108_[8] = _0031_ ?  _0106_[8] : _0107_[8];
  assign _0108_[9] = _0031_ ?  _0106_[9] : _0107_[9];
  assign _0108_[10] = _0031_ ?  _0106_[10] : _0107_[10];
  assign _0108_[11] = _0031_ ?  _0106_[11] : _0107_[11];
  assign _0108_[12] = _0031_ ?  _0106_[12] : _0107_[12];
  assign _0108_[13] = _0031_ ?  _0106_[13] : _0107_[13];
  assign _0108_[14] = _0031_ ?  _0106_[14] : _0107_[14];
  assign _0108_[15] = _0031_ ?  _0106_[15] : _0107_[15];
  assign _0108_[16] = _0031_ ?  _0106_[16] : _0107_[16];
  assign _0108_[17] = _0031_ ?  _0106_[17] : _0107_[17];
  assign _0108_[18] = _0031_ ?  _0106_[18] : _0107_[18];
  assign _0107_[3] = s_axis_tvalid ?  _0128_[3] : 1'hx;
  assign _0107_[4] = s_axis_tvalid ?  _0129_[4] : 1'hx;
  assign _0107_[5] = s_axis_tvalid ?  _0129_[5] : 1'hx;
  assign _0107_[6] = s_axis_tvalid ?  _0129_[6] : 1'hx;
  assign _0107_[7] = s_axis_tvalid ?  _0129_[7] : 1'hx;
  assign _0107_[8] = s_axis_tvalid ?  _0129_[8] : 1'hx;
  assign _0107_[9] = s_axis_tvalid ?  _0129_[9] : 1'hx;
  assign _0107_[10] = s_axis_tvalid ?  _0129_[10] : 1'hx;
  assign _0107_[11] = s_axis_tvalid ?  _0129_[11] : 1'hx;
  assign _0107_[12] = s_axis_tvalid ?  _0129_[12] : 1'hx;
  assign _0107_[13] = s_axis_tvalid ?  _0129_[13] : 1'hx;
  assign _0107_[14] = s_axis_tvalid ?  _0129_[14] : 1'hx;
  assign _0107_[15] = s_axis_tvalid ?  _0129_[15] : 1'hx;
  assign _0107_[16] = s_axis_tvalid ?  _0129_[16] : 1'hx;
  assign _0107_[17] = s_axis_tvalid ?  _0129_[17] : 1'hx;
  assign _0107_[18] = s_axis_tvalid ?  _0129_[18] : 1'hx;
  assign _0106_[2] = _0135_ ?  _0105_[2] : 1'h1;
  assign _0106_[3] = _0135_ ?  _0105_[3] : _0128_[3];
  assign _0106_[4] = _0135_ ?  _0105_[4] : _0129_[4];
  assign _0106_[5] = _0135_ ?  _0105_[5] : _0129_[5];
  assign _0106_[6] = _0135_ ?  _0105_[6] : _0129_[6];
  assign _0106_[7] = _0135_ ?  _0105_[7] : _0129_[7];
  assign _0106_[8] = _0135_ ?  _0105_[8] : _0129_[8];
  assign _0106_[9] = _0135_ ?  _0105_[9] : _0129_[9];
  assign _0106_[10] = _0135_ ?  _0105_[10] : _0129_[10];
  assign _0106_[11] = _0135_ ?  _0105_[11] : _0129_[11];
  assign _0106_[12] = _0135_ ?  _0105_[12] : _0129_[12];
  assign _0106_[13] = _0135_ ?  _0105_[13] : _0129_[13];
  assign _0106_[14] = _0135_ ?  _0105_[14] : _0129_[14];
  assign _0106_[15] = _0135_ ?  _0105_[15] : _0129_[15];
  assign _0106_[16] = _0135_ ?  _0105_[16] : _0129_[16];
  assign _0106_[17] = _0135_ ?  _0105_[17] : _0129_[17];
  assign _0106_[18] = _0135_ ?  _0105_[18] : _0129_[18];
  assign _0105_[2] = _0070_ ?  1'hx : 1'h0;
  assign _0105_[3] = _0070_ ?  1'hx : prescale[0];
  assign _0105_[4] = _0070_ ?  1'hx : prescale[1];
  assign _0105_[5] = _0070_ ?  1'hx : prescale[2];
  assign _0105_[6] = _0070_ ?  1'hx : prescale[3];
  assign _0105_[7] = _0070_ ?  1'hx : prescale[4];
  assign _0105_[8] = _0070_ ?  1'hx : prescale[5];
  assign _0105_[9] = _0070_ ?  1'hx : prescale[6];
  assign _0105_[10] = _0070_ ?  1'hx : prescale[7];
  assign _0105_[11] = _0070_ ?  1'hx : prescale[8];
  assign _0105_[12] = _0070_ ?  1'hx : prescale[9];
  assign _0105_[13] = _0070_ ?  1'hx : prescale[10];
  assign _0105_[14] = _0070_ ?  1'hx : prescale[11];
  assign _0105_[15] = _0070_ ?  1'hx : prescale[12];
  assign _0105_[16] = _0070_ ?  1'hx : prescale[13];
  assign _0105_[17] = _0070_ ?  1'hx : prescale[14];
  assign _0105_[18] = _0070_ ?  1'hx : prescale[15];
  assign _0104_[0] = _0031_ ?  _0102_[0] : _0098_[8];
  assign _0104_[1] = _0031_ ?  _0102_[1] : _0103_[2];
  assign _0104_[2] = _0031_ ?  _0102_[2] : _0103_[2];
  assign _0104_[3] = _0031_ ?  _0102_[3] : _0098_[8];
  assign _0098_[8] = s_axis_tvalid ?  1'h1 : 1'hx;
  assign _0103_[2] = s_axis_tvalid ?  1'h0 : 1'hx;
  assign _0102_[0] = _0135_ ?  _0101_[0] : _0134_[0];
  assign _0102_[1] = _0135_ ?  _0101_[1] : _0134_[1];
  assign _0102_[2] = _0135_ ?  _0101_[2] : _0134_[2];
  assign _0102_[3] = _0135_ ?  _0101_[3] : _0134_[3];
  assign _0101_[0] = _0070_ ?  1'hx : _0134_[0];
  assign _0101_[1] = _0070_ ?  1'hx : _0134_[1];
  assign _0101_[2] = _0070_ ?  1'hx : _0134_[2];
  assign _0101_[3] = _0070_ ?  1'hx : _0134_[3];
  assign _0100_ = s_axis_tvalid ?  _0097_ : 1'h1;
  assign _0099_[0] = _0031_ ?  _0113_[0] : _0098_[0];
  assign _0099_[1] = _0031_ ?  _0113_[1] : _0098_[1];
  assign _0099_[2] = _0031_ ?  _0113_[2] : _0098_[2];
  assign _0099_[3] = _0031_ ?  _0113_[3] : _0098_[3];
  assign _0099_[4] = _0031_ ?  _0113_[4] : _0098_[4];
  assign _0099_[5] = _0031_ ?  _0113_[5] : _0098_[5];
  assign _0099_[6] = _0031_ ?  _0113_[6] : _0098_[6];
  assign _0099_[7] = _0031_ ?  _0113_[7] : _0098_[7];
  assign _0099_[8] = _0031_ ?  _0113_[8] : _0098_[8];
  assign _0098_[0] = s_axis_tvalid ?  s_axis_tdata[0] : 1'hx;
  assign _0098_[1] = s_axis_tvalid ?  s_axis_tdata[1] : 1'hx;
  assign _0098_[2] = s_axis_tvalid ?  s_axis_tdata[2] : 1'hx;
  assign _0098_[3] = s_axis_tvalid ?  s_axis_tdata[3] : 1'hx;
  assign _0098_[4] = s_axis_tvalid ?  s_axis_tdata[4] : 1'hx;
  assign _0098_[5] = s_axis_tvalid ?  s_axis_tdata[5] : 1'hx;
  assign _0098_[6] = s_axis_tvalid ?  s_axis_tdata[6] : 1'hx;
  assign _0098_[7] = s_axis_tvalid ?  s_axis_tdata[7] : 1'hx;
  assign _0113_[0] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [1];
  assign _0113_[1] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [2];
  assign _0113_[2] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [3];
  assign _0113_[3] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [4];
  assign _0113_[4] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [5];
  assign _0113_[5] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [6];
  assign _0113_[6] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [7];
  assign _0113_[7] = _0135_ ?  1'hx : \uart_tx_inst.data_reg [8];
  assign _0113_[8] = _0135_ ?  1'hx : 1'h0;
  assign _0093_ = _0028_ ?  _0092_ : _0087_;
  assign _0092_ = _0025_ ?  _0087_ : _0091_;
  assign _0091_ = _0029_ ?  _0090_ : _0087_;
  assign _0090_ = _0030_ ?  _0089_ : _0087_;
  assign _0089_ = _0026_ ?  _0087_ : _0088_;
  assign _0088_ = \uart_rx_inst.rxd_reg  ?  1'h1 : _0087_;
  assign _0087_ = _0071_ ?  1'h0 : \uart_rx_inst.m_axis_tvalid_reg ;
  assign _0086_[0] = _0025_ ?  _0072_[2] : _0085_[0];
  assign _0086_[1] = _0025_ ?  _0072_[2] : _0085_[1];
  assign _0086_[2] = _0025_ ?  _0072_[2] : _0085_[2];
  assign _0086_[3] = _0025_ ?  _0072_[2] : _0085_[3];
  assign _0086_[4] = _0025_ ?  _0072_[2] : _0085_[4];
  assign _0086_[5] = _0025_ ?  _0072_[2] : _0085_[5];
  assign _0086_[6] = _0025_ ?  _0072_[2] : _0085_[6];
  assign _0086_[7] = _0025_ ?  _0072_[2] : _0085_[7];
  assign _0085_[0] = _0029_ ?  _0084_[0] : 1'hx;
  assign _0085_[1] = _0029_ ?  _0084_[1] : 1'hx;
  assign _0085_[2] = _0029_ ?  _0084_[2] : 1'hx;
  assign _0085_[3] = _0029_ ?  _0084_[3] : 1'hx;
  assign _0085_[4] = _0029_ ?  _0084_[4] : 1'hx;
  assign _0085_[5] = _0029_ ?  _0084_[5] : 1'hx;
  assign _0085_[6] = _0029_ ?  _0084_[6] : 1'hx;
  assign _0085_[7] = _0029_ ?  _0084_[7] : 1'hx;
  assign _0084_[0] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [1];
  assign _0084_[1] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [2];
  assign _0084_[2] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [3];
  assign _0084_[3] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [4];
  assign _0084_[4] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [5];
  assign _0084_[5] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [6];
  assign _0084_[6] = _0030_ ?  1'hx : \uart_rx_inst.data_reg [7];
  assign _0084_[7] = _0030_ ?  1'hx : \uart_rx_inst.rxd_reg ;
  assign _0083_[0] = _0028_ ?  _0082_[0] : _0115_[0];
  assign _0083_[1] = _0028_ ?  _0082_[1] : _0126_[1];
  assign _0083_[2] = _0028_ ?  _0082_[2] : _0126_[2];
  assign _0083_[3] = _0028_ ?  _0082_[3] : _0126_[3];
  assign _0083_[4] = _0028_ ?  _0082_[4] : _0126_[4];
  assign _0083_[5] = _0028_ ?  _0082_[5] : _0126_[5];
  assign _0083_[6] = _0028_ ?  _0082_[6] : _0126_[6];
  assign _0083_[7] = _0028_ ?  _0082_[7] : _0126_[7];
  assign _0083_[8] = _0028_ ?  _0082_[8] : _0126_[8];
  assign _0083_[9] = _0028_ ?  _0082_[9] : _0126_[9];
  assign _0083_[10] = _0028_ ?  _0082_[10] : _0126_[10];
  assign _0083_[11] = _0028_ ?  _0082_[11] : _0126_[11];
  assign _0083_[12] = _0028_ ?  _0082_[12] : _0126_[12];
  assign _0083_[13] = _0028_ ?  _0082_[13] : _0126_[13];
  assign _0083_[14] = _0028_ ?  _0082_[14] : _0126_[14];
  assign _0083_[15] = _0028_ ?  _0082_[15] : _0126_[15];
  assign _0083_[16] = _0028_ ?  _0082_[16] : _0126_[16];
  assign _0083_[17] = _0028_ ?  _0082_[17] : _0126_[17];
  assign _0083_[18] = _0028_ ?  _0082_[18] : _0126_[18];
  assign _0082_[0] = _0025_ ?  _0072_[2] : _0081_[2];
  assign _0082_[1] = _0025_ ?  _0072_[3] : _0081_[2];
  assign _0096_ = ~ _0135_;
  assign _0069_[2] = ~ _0024_;
  assign _0067_[0] = ~ _0030_;
  assign _0067_[1] = ~ _0029_;
  assign _0066_[0] = ~ _0025_;
  assign _0066_[1] = ~ _0028_;
  assign _0023_ = ~ rst;
  assign _0135_ = _0134_[31] |  _0035_[0];
  assign _0024_ = _0138_[31] |  _0139_;
  assign _0030_ = _0124_[31] |  _0041_[0];
  assign _0029_ = _0122_[31] |  _0043_[0];
  assign _0025_ = _0120_[31] |  _0045_[0];
  assign _0028_ = _0116_[31] |  _0117_;
  assign _0141_[1] = _0137_[1] ^  \uart_tx_inst.prescale_reg [0];
  assign _0141_[2] = _0137_[2] ^  _0140_[1];
  assign _0141_[3] = _0137_[3] ^  _0140_[2];
  assign _0141_[4] = _0137_[4] ^  _0140_[3];
  assign _0141_[5] = _0137_[5] ^  _0140_[4];
  assign _0141_[6] = _0137_[6] ^  _0140_[5];
  assign _0141_[7] = _0137_[7] ^  _0140_[6];
  assign _0141_[8] = _0137_[8] ^  _0140_[7];
  assign _0141_[9] = _0137_[9] ^  _0140_[8];
  assign _0141_[10] = _0137_[10] ^  _0140_[9];
  assign _0141_[11] = _0137_[11] ^  _0140_[10];
  assign _0141_[12] = _0137_[12] ^  _0140_[11];
  assign _0141_[13] = _0137_[13] ^  _0140_[12];
  assign _0141_[14] = _0137_[14] ^  _0140_[13];
  assign _0141_[15] = _0137_[15] ^  _0140_[14];
  assign _0141_[16] = _0137_[16] ^  _0140_[15];
  assign _0141_[17] = _0137_[17] ^  _0140_[16];
  assign _0141_[18] = _0137_[18] ^  _0140_[17];
  assign _0134_[1] = _0133_[1] ^  \uart_tx_inst.bit_cnt [0];
  assign _0134_[2] = _0133_[2] ^  _0132_[1];
  assign _0134_[3] = _0133_[3] ^  _0132_[2];
  assign _0129_[5] = _0128_[5] ^  _0127_[4];
  assign _0131_[5] = _0128_[6] ^  _0130_[4];
  assign _0131_[6] = _0128_[7] ^  _0130_[5];
  assign _0131_[7] = _0128_[8] ^  _0130_[6];
  assign _0131_[8] = _0128_[9] ^  _0130_[7];
  assign _0131_[9] = _0128_[10] ^  _0130_[8];
  assign _0131_[10] = _0128_[11] ^  _0130_[9];
  assign _0131_[11] = _0128_[12] ^  _0130_[10];
  assign _0131_[12] = _0128_[13] ^  _0130_[11];
  assign _0131_[13] = _0128_[14] ^  _0130_[12];
  assign _0131_[14] = _0128_[15] ^  _0130_[13];
  assign _0131_[15] = _0128_[16] ^  _0130_[14];
  assign _0131_[16] = _0128_[17] ^  _0130_[15];
  assign _0131_[17] = _0128_[18] ^  _0130_[16];
  assign _0124_[3] = _0119_[3] ^  _0121_[2];
  assign _0129_[4] = _0128_[4] ^  prescale[0];
  assign _0129_[6] = _0128_[6] ^  _0127_[5];
  assign _0129_[7] = _0128_[7] ^  _0127_[6];
  assign _0129_[8] = _0128_[8] ^  _0127_[7];
  assign _0129_[9] = _0128_[9] ^  _0127_[8];
  assign _0129_[10] = _0128_[10] ^  _0127_[9];
  assign _0129_[11] = _0128_[11] ^  _0127_[10];
  assign _0129_[12] = _0128_[12] ^  _0127_[11];
  assign _0129_[13] = _0128_[13] ^  _0127_[12];
  assign _0129_[14] = _0128_[14] ^  _0127_[13];
  assign _0129_[15] = _0128_[15] ^  _0127_[14];
  assign _0129_[16] = _0128_[16] ^  _0127_[15];
  assign _0129_[17] = _0128_[17] ^  _0127_[16];
  assign _0129_[18] = _0128_[18] ^  _0127_[17];
  assign _0122_[2] = _0119_[2] ^  _0121_[1];
  assign _0122_[1] = _0119_[1] ^  \uart_rx_inst.bit_cnt [0];
  assign _0126_[1] = _0115_[1] ^  \uart_rx_inst.prescale_reg [0];
  assign _0126_[2] = _0115_[2] ^  _0125_[1];
  assign _0126_[3] = _0115_[3] ^  _0125_[2];
  assign _0126_[4] = _0115_[4] ^  _0125_[3];
  assign _0126_[5] = _0115_[5] ^  _0125_[4];
  assign _0126_[6] = _0115_[6] ^  _0125_[5];
  assign _0126_[7] = _0115_[7] ^  _0125_[6];
  assign _0126_[8] = _0115_[8] ^  _0125_[7];
  assign _0126_[9] = _0115_[9] ^  _0125_[8];
  assign _0126_[10] = _0115_[10] ^  _0125_[9];
  assign _0126_[11] = _0115_[11] ^  _0125_[10];
  assign _0126_[12] = _0115_[12] ^  _0125_[11];
  assign _0126_[13] = _0115_[13] ^  _0125_[12];
  assign _0126_[14] = _0115_[14] ^  _0125_[13];
  assign _0126_[15] = _0115_[15] ^  _0125_[14];
  assign _0126_[16] = _0115_[16] ^  _0125_[15];
  assign _0126_[17] = _0115_[17] ^  _0125_[16];
  assign _0126_[18] = _0115_[18] ^  _0125_[17];
  assign _0321_ = _0137_[1] &  \uart_tx_inst.prescale_reg [0];
  assign _0292_ = _0137_[3] &  \uart_tx_inst.prescale_reg [2];
  assign _0293_ = _0137_[5] &  \uart_tx_inst.prescale_reg [4];
  assign _0294_ = _0137_[7] &  \uart_tx_inst.prescale_reg [6];
  assign _0295_ = _0137_[9] &  \uart_tx_inst.prescale_reg [8];
  assign _0296_ = _0137_[11] &  \uart_tx_inst.prescale_reg [10];
  assign _0297_ = _0137_[13] &  \uart_tx_inst.prescale_reg [12];
  assign _0298_ = _0137_[15] &  \uart_tx_inst.prescale_reg [14];
  assign _0299_ = _0137_[17] &  \uart_tx_inst.prescale_reg [16];
  assign _0322_ = _0036_[1] &  _0140_[1];
  assign _0300_ = _0036_[3] &  _0310_;
  assign _0301_ = _0036_[5] &  _0312_;
  assign _0302_ = _0036_[7] &  _0314_;
  assign _0303_ = _0137_[18] &  _0316_;
  assign _0323_ = _0037_[1] &  _0140_[3];
  assign _0305_ = _0037_[3] &  _0318_;
  assign _0324_ = _0038_[1] &  _0140_[7];
  assign _0036_[1] = _0137_[3] &  _0137_[2];
  assign _0036_[3] = _0137_[7] &  _0137_[6];
  assign _0036_[4] = _0137_[9] &  _0137_[8];
  assign _0036_[6] = _0137_[13] &  _0137_[12];
  assign _0036_[8] = _0137_[17] &  _0137_[16];
  assign _0037_[1] = _0036_[3] &  _0036_[2];
  assign _0037_[2] = _0036_[5] &  _0036_[4];
  assign _0037_[3] = _0036_[7] &  _0036_[6];
  assign _0037_[4] = _0137_[18] &  _0036_[8];
  assign _0038_[1] = _0037_[3] &  _0037_[2];
  assign _0325_ = _0037_[2] &  _0140_[7];
  assign _0326_ = _0036_[2] &  _0140_[3];
  assign _0327_ = _0036_[4] &  _0140_[7];
  assign _0328_ = _0036_[6] &  _0140_[11];
  assign _0329_ = _0036_[8] &  _0140_[15];
  assign _0330_ = _0137_[2] &  _0140_[1];
  assign _0331_ = _0137_[4] &  _0140_[3];
  assign _0332_ = _0137_[6] &  _0140_[5];
  assign _0333_ = _0137_[8] &  _0140_[7];
  assign _0334_ = _0137_[10] &  _0140_[9];
  assign _0335_ = _0137_[12] &  _0140_[11];
  assign _0336_ = _0137_[14] &  _0140_[13];
  assign _0337_ = _0137_[16] &  _0140_[15];
  assign _0140_[1] = \uart_tx_inst.prescale_reg [1] |  _0321_;
  assign _0311_ = \uart_tx_inst.prescale_reg [7] |  _0294_;
  assign _0312_ = \uart_tx_inst.prescale_reg [9] |  _0295_;
  assign _0313_ = \uart_tx_inst.prescale_reg [11] |  _0296_;
  assign _0315_ = \uart_tx_inst.prescale_reg [15] |  _0298_;
  assign _0316_ = \uart_tx_inst.prescale_reg [17] |  _0299_;
  assign _0140_[3] = _0309_ |  _0322_;
  assign _0317_ = _0311_ |  _0300_;
  assign _0318_ = _0313_ |  _0301_;
  assign _0319_ = _0315_ |  _0302_;
  assign _0306_ = \uart_tx_inst.prescale_reg [18] |  _0303_;
  assign _0140_[7] = _0317_ |  _0323_;
  assign _0320_ = _0319_ |  _0305_;
  assign _0140_[15] = _0320_ |  _0324_;
  assign _0140_[11] = _0318_ |  _0325_;
  assign _0140_[5] = _0310_ |  _0326_;
  assign _0140_[9] = _0312_ |  _0327_;
  assign _0140_[13] = _0314_ |  _0328_;
  assign _0140_[17] = _0316_ |  _0329_;
  assign _0140_[2] = \uart_tx_inst.prescale_reg [2] |  _0330_;
  assign _0140_[4] = \uart_tx_inst.prescale_reg [4] |  _0331_;
  assign _0140_[6] = \uart_tx_inst.prescale_reg [6] |  _0332_;
  assign _0140_[8] = \uart_tx_inst.prescale_reg [8] |  _0333_;
  assign _0140_[10] = \uart_tx_inst.prescale_reg [10] |  _0334_;
  assign _0140_[12] = \uart_tx_inst.prescale_reg [12] |  _0335_;
  assign _0140_[14] = \uart_tx_inst.prescale_reg [14] |  _0336_;
  assign _0140_[16] = \uart_tx_inst.prescale_reg [16] |  _0337_;
  assign _0290_ = _0133_[2] &  _0132_[1];
  assign _0291_ = \uart_tx_inst.bit_cnt [3] |  _0288_;
  assign _0132_[2] = \uart_tx_inst.bit_cnt [2] |  _0290_;
  assign _0034_[0] = _0133_[1] &  \uart_tx_inst.bit_cnt [0];
  assign _0288_ = _0133_[3] &  \uart_tx_inst.bit_cnt [2];
  assign _0289_ = _0034_[1] &  _0132_[1];
  assign _0034_[1] = _0133_[3] &  _0133_[2];
  assign _0132_[1] = \uart_tx_inst.bit_cnt [1] |  _0034_[0];
  assign _0132_[31] = _0291_ |  _0289_;
  assign _0304_ = _0037_[1] &  _0136_[3];
  assign _0307_ = _0038_[1] &  _0136_[7];
  assign _0036_[2] = _0137_[5] &  _0137_[4];
  assign _0036_[5] = _0137_[11] &  _0137_[10];
  assign _0036_[7] = _0137_[15] &  _0137_[14];
  assign _0308_ = _0037_[4] &  _0136_[15];
  assign _0309_ = \uart_tx_inst.prescale_reg [3] |  _0292_;
  assign _0310_ = \uart_tx_inst.prescale_reg [5] |  _0293_;
  assign _0314_ = \uart_tx_inst.prescale_reg [13] |  _0297_;
  assign _0136_[3] = _0309_ |  _0036_[1];
  assign _0136_[7] = _0317_ |  _0304_;
  assign _0136_[15] = _0320_ |  _0307_;
  assign _0136_[31] = _0306_ |  _0308_;
  assign _0241_ = _0128_[6] &  prescale[2];
  assign _0242_ = _0128_[8] &  prescale[4];
  assign _0243_ = _0128_[10] &  prescale[6];
  assign _0244_ = _0128_[12] &  prescale[8];
  assign _0245_ = _0128_[14] &  prescale[10];
  assign _0246_ = _0128_[16] &  prescale[12];
  assign _0247_ = _0128_[18] &  prescale[14];
  assign _0248_ = _0257_ &  _0278_;
  assign _0249_ = _0259_ &  _0280_;
  assign _0250_ = _0261_ &  _0282_;
  assign _0252_ = _0263_ &  _0127_[4];
  assign _0253_ = _0265_ &  _0285_;
  assign _0254_ = _0266_ &  _0130_[7];
  assign _0256_ = _0128_[6] &  _0128_[5];
  assign _0257_ = _0128_[8] &  _0128_[7];
  assign _0258_ = _0128_[10] &  _0128_[9];
  assign _0259_ = _0128_[12] &  _0128_[11];
  assign _0260_ = _0128_[14] &  _0128_[13];
  assign _0261_ = _0128_[16] &  _0128_[15];
  assign _0262_ = _0128_[18] &  _0128_[17];
  assign _0263_ = _0257_ &  _0256_;
  assign _0264_ = _0259_ &  _0258_;
  assign _0265_ = _0261_ &  _0260_;
  assign _0266_ = _0265_ &  _0264_;
  assign _0267_ = _0264_ &  _0130_[7];
  assign _0268_ = _0256_ &  _0127_[4];
  assign _0269_ = _0258_ &  _0130_[7];
  assign _0270_ = _0260_ &  _0130_[11];
  assign _0255_ = _0262_ &  _0130_[15];
  assign _0271_ = _0128_[5] &  _0127_[4];
  assign _0272_ = _0128_[7] &  _0130_[5];
  assign _0273_ = _0128_[9] &  _0130_[7];
  assign _0274_ = _0128_[11] &  _0130_[9];
  assign _0275_ = _0128_[13] &  _0130_[11];
  assign _0276_ = _0128_[15] &  _0130_[13];
  assign _0277_ = _0128_[17] &  _0130_[15];
  assign _0278_ = prescale[3] |  _0241_;
  assign _0279_ = prescale[5] |  _0242_;
  assign _0280_ = prescale[7] |  _0243_;
  assign _0281_ = prescale[9] |  _0244_;
  assign _0282_ = prescale[11] |  _0245_;
  assign _0283_ = prescale[13] |  _0246_;
  assign _0251_ = prescale[15] |  _0247_;
  assign _0284_ = _0279_ |  _0248_;
  assign _0285_ = _0281_ |  _0249_;
  assign _0286_ = _0283_ |  _0250_;
  assign _0130_[7] = _0284_ |  _0252_;
  assign _0287_ = _0286_ |  _0253_;
  assign _0130_[15] = _0287_ |  _0254_;
  assign _0130_[31] = _0251_ |  _0255_;
  assign _0130_[11] = _0285_ |  _0267_;
  assign _0130_[5] = _0278_ |  _0268_;
  assign _0130_[9] = _0280_ |  _0269_;
  assign _0130_[13] = _0282_ |  _0270_;
  assign _0130_[4] = prescale[2] |  _0271_;
  assign _0130_[6] = prescale[4] |  _0272_;
  assign _0130_[8] = prescale[6] |  _0273_;
  assign _0130_[10] = prescale[8] |  _0274_;
  assign _0130_[12] = prescale[10] |  _0275_;
  assign _0130_[14] = prescale[12] |  _0276_;
  assign _0130_[16] = prescale[14] |  _0277_;
  assign _0040_[0] = _0119_[1] &  \uart_rx_inst.bit_cnt [0];
  assign _0171_ = _0119_[3] &  \uart_rx_inst.bit_cnt [2];
  assign _0121_[1] = \uart_rx_inst.bit_cnt [1] |  _0040_[0];
  assign _0172_ = \uart_rx_inst.bit_cnt [3] |  _0171_;
  assign _0194_ = _0128_[5] &  prescale[1];
  assign _0195_ = _0128_[7] &  prescale[3];
  assign _0196_ = _0128_[9] &  prescale[5];
  assign _0197_ = _0128_[11] &  prescale[7];
  assign _0198_ = _0128_[13] &  prescale[9];
  assign _0199_ = _0128_[15] &  prescale[11];
  assign _0200_ = _0128_[17] &  prescale[13];
  assign _0201_ = _0208_ &  _0230_;
  assign _0202_ = _0210_ &  _0232_;
  assign _0203_ = _0212_ &  _0234_;
  assign _0204_ = _0214_ &  prescale[0];
  assign _0205_ = _0216_ &  _0238_;
  assign _0206_ = _0217_ &  _0127_[7];
  assign _0207_ = _0128_[5] &  _0128_[4];
  assign _0208_ = _0128_[7] &  _0128_[6];
  assign _0209_ = _0128_[9] &  _0128_[8];
  assign _0210_ = _0128_[11] &  _0128_[10];
  assign _0211_ = _0128_[13] &  _0128_[12];
  assign _0212_ = _0128_[15] &  _0128_[14];
  assign _0213_ = _0128_[17] &  _0128_[16];
  assign _0214_ = _0208_ &  _0207_;
  assign _0215_ = _0210_ &  _0209_;
  assign _0216_ = _0212_ &  _0211_;
  assign _0217_ = _0216_ &  _0215_;
  assign _0218_ = _0215_ &  _0127_[7];
  assign _0219_ = _0207_ &  prescale[0];
  assign _0220_ = _0209_ &  _0127_[7];
  assign _0221_ = _0211_ &  _0127_[11];
  assign _0222_ = _0213_ &  _0127_[15];
  assign _0223_ = _0128_[4] &  prescale[0];
  assign _0224_ = _0128_[6] &  _0127_[5];
  assign _0225_ = _0128_[8] &  _0127_[7];
  assign _0226_ = _0128_[10] &  _0127_[9];
  assign _0227_ = _0128_[12] &  _0127_[11];
  assign _0228_ = _0128_[14] &  _0127_[13];
  assign _0229_ = _0128_[16] &  _0127_[15];
  assign _0230_ = prescale[2] |  _0194_;
  assign _0231_ = prescale[4] |  _0195_;
  assign _0232_ = prescale[6] |  _0196_;
  assign _0233_ = prescale[8] |  _0197_;
  assign _0234_ = prescale[10] |  _0198_;
  assign _0235_ = prescale[12] |  _0199_;
  assign _0236_ = prescale[14] |  _0200_;
  assign _0237_ = _0231_ |  _0201_;
  assign _0238_ = _0233_ |  _0202_;
  assign _0239_ = _0235_ |  _0203_;
  assign _0127_[7] = _0237_ |  _0204_;
  assign _0240_ = _0239_ |  _0205_;
  assign _0127_[15] = _0240_ |  _0206_;
  assign _0127_[11] = _0238_ |  _0218_;
  assign _0127_[5] = _0230_ |  _0219_;
  assign _0127_[9] = _0232_ |  _0220_;
  assign _0127_[13] = _0234_ |  _0221_;
  assign _0127_[17] = _0236_ |  _0222_;
  assign _0127_[4] = prescale[1] |  _0223_;
  assign _0127_[6] = prescale[3] |  _0224_;
  assign _0127_[8] = prescale[5] |  _0225_;
  assign _0127_[10] = prescale[7] |  _0226_;
  assign _0127_[12] = prescale[9] |  _0227_;
  assign _0127_[14] = prescale[11] |  _0228_;
  assign _0127_[16] = prescale[13] |  _0229_;
  assign _0176_ = _0040_[1] &  _0121_[1];
  assign _0175_ = _0119_[2] &  _0121_[1];
  assign _0123_[31] = _0172_ |  _0176_;
  assign _0173_ = \uart_rx_inst.bit_cnt [3] &  \uart_rx_inst.bit_cnt [2];
  assign _0174_ = _0042_[1] &  _0121_[1];
  assign _0121_[31] = _0173_ |  _0174_;
  assign _0121_[2] = \uart_rx_inst.bit_cnt [2] |  _0175_;
  assign _0040_[1] = _0119_[3] &  _0119_[2];
  assign _0118_[31] = _0172_ |  _0040_[1];
  assign _0177_ = _0115_[1] &  \uart_rx_inst.prescale_reg [0];
  assign _0143_ = _0115_[5] &  \uart_rx_inst.prescale_reg [4];
  assign _0145_ = _0115_[9] &  \uart_rx_inst.prescale_reg [8];
  assign _0146_ = _0115_[11] &  \uart_rx_inst.prescale_reg [10];
  assign _0147_ = _0115_[13] &  \uart_rx_inst.prescale_reg [12];
  assign _0149_ = _0115_[17] &  \uart_rx_inst.prescale_reg [16];
  assign _0178_ = _0046_[1] &  _0125_[1];
  assign _0150_ = _0046_[3] &  _0160_;
  assign _0151_ = _0046_[5] &  _0162_;
  assign _0152_ = _0046_[7] &  _0164_;
  assign _0153_ = _0115_[18] &  _0166_;
  assign _0179_ = _0047_[1] &  _0125_[3];
  assign _0180_ = _0048_[1] &  _0125_[7];
  assign _0046_[1] = _0115_[3] &  _0115_[2];
  assign _0046_[4] = _0115_[9] &  _0115_[8];
  assign _0046_[5] = _0115_[11] &  _0115_[10];
  assign _0046_[6] = _0115_[13] &  _0115_[12];
  assign _0046_[7] = _0115_[15] &  _0115_[14];
  assign _0046_[8] = _0115_[17] &  _0115_[16];
  assign _0181_ = _0047_[2] &  _0125_[7];
  assign _0182_ = _0046_[2] &  _0125_[3];
  assign _0183_ = _0046_[4] &  _0125_[7];
  assign _0184_ = _0046_[6] &  _0125_[11];
  assign _0185_ = _0046_[8] &  _0125_[15];
  assign _0186_ = _0115_[2] &  _0125_[1];
  assign _0187_ = _0115_[4] &  _0125_[3];
  assign _0188_ = _0115_[6] &  _0125_[5];
  assign _0189_ = _0115_[8] &  _0125_[7];
  assign _0190_ = _0115_[10] &  _0125_[9];
  assign _0191_ = _0115_[12] &  _0125_[11];
  assign _0192_ = _0115_[14] &  _0125_[13];
  assign _0193_ = _0115_[16] &  _0125_[15];
  assign _0125_[1] = \uart_rx_inst.prescale_reg [1] |  _0177_;
  assign _0160_ = \uart_rx_inst.prescale_reg [5] |  _0143_;
  assign _0162_ = \uart_rx_inst.prescale_reg [9] |  _0145_;
  assign _0163_ = \uart_rx_inst.prescale_reg [11] |  _0146_;
  assign _0125_[3] = _0159_ |  _0178_;
  assign _0156_ = \uart_rx_inst.prescale_reg [18] |  _0153_;
  assign _0125_[7] = _0167_ |  _0179_;
  assign _0170_ = _0169_ |  _0155_;
  assign _0125_[15] = _0170_ |  _0180_;
  assign _0125_[11] = _0168_ |  _0181_;
  assign _0125_[5] = _0160_ |  _0182_;
  assign _0125_[9] = _0162_ |  _0183_;
  assign _0125_[13] = _0164_ |  _0184_;
  assign _0125_[17] = _0166_ |  _0185_;
  assign _0125_[2] = \uart_rx_inst.prescale_reg [2] |  _0186_;
  assign _0125_[4] = \uart_rx_inst.prescale_reg [4] |  _0187_;
  assign _0125_[6] = \uart_rx_inst.prescale_reg [6] |  _0188_;
  assign _0125_[8] = \uart_rx_inst.prescale_reg [8] |  _0189_;
  assign _0125_[10] = \uart_rx_inst.prescale_reg [10] |  _0190_;
  assign _0125_[12] = \uart_rx_inst.prescale_reg [12] |  _0191_;
  assign _0125_[14] = \uart_rx_inst.prescale_reg [14] |  _0192_;
  assign _0125_[16] = \uart_rx_inst.prescale_reg [16] |  _0193_;
  assign _0142_ = _0115_[3] &  \uart_rx_inst.prescale_reg [2];
  assign _0144_ = _0115_[7] &  \uart_rx_inst.prescale_reg [6];
  assign _0148_ = _0115_[15] &  \uart_rx_inst.prescale_reg [14];
  assign _0154_ = _0047_[1] &  _0114_[3];
  assign _0155_ = _0047_[3] &  _0168_;
  assign _0157_ = _0048_[1] &  _0114_[7];
  assign _0158_ = _0047_[4] &  _0114_[15];
  assign _0159_ = \uart_rx_inst.prescale_reg [3] |  _0142_;
  assign _0161_ = \uart_rx_inst.prescale_reg [7] |  _0144_;
  assign _0164_ = \uart_rx_inst.prescale_reg [13] |  _0147_;
  assign _0165_ = \uart_rx_inst.prescale_reg [15] |  _0148_;
  assign _0166_ = \uart_rx_inst.prescale_reg [17] |  _0149_;
  assign _0114_[3] = _0159_ |  _0046_[1];
  assign _0167_ = _0161_ |  _0150_;
  assign _0168_ = _0163_ |  _0151_;
  assign _0169_ = _0165_ |  _0152_;
  assign _0114_[7] = _0167_ |  _0154_;
  assign _0114_[15] = _0170_ |  _0157_;
  assign _0114_[31] = _0156_ |  _0158_;
  assign _0034_[15:2] = 14'h3fff;
  assign _0035_[7:1] = 7'h7f;
  assign _0036_[15:9] = { 6'h3f, _0137_[18] };
  assign _0037_[7:5] = 3'h7;
  assign _0038_[3:2] = { 1'h1, _0037_[4] };
  assign _0039_[1] = _0037_[4];
  assign _0040_[15:2] = 14'h3fff;
  assign _0041_[7:1] = 7'h7f;
  assign { _0042_[15:2], _0042_[0] } = { 14'h3fff, _0040_[0] };
  assign _0043_[7:1] = 7'h7f;
  assign _0044_[15:1] = { 14'h3fff, _0040_[1] };
  assign _0045_[7:1] = 7'h7f;
  assign _0046_[15:9] = { 6'h3f, _0115_[18] };
  assign _0047_[7:5] = 3'h7;
  assign _0048_[3:2] = { 1'h1, _0047_[4] };
  assign _0049_[1] = _0047_[4];
  assign _0058_[2] = _0051_[0];
  assign _0065_[1] = _0064_[1];
  assign _0066_[2] = _0027_;
  assign _0067_[3:2] = { _0066_[1], _0025_ };
  assign _0068_[3:1] = { _0025_, _0067_[1:0] };
  assign _0069_[1:0] = { _0031_, s_axis_tvalid };
  assign _0072_[1:0] = _0072_[3:2];
  assign _0078_[1:0] = _0072_[3:2];
  assign _0079_[1:0] = { _0079_[2], _0079_[2] };
  assign _0080_[2:0] = { _0027_, _0027_, _0027_ };
  assign _0081_[1:0] = { _0081_[2], _0081_[2] };
  assign { _0103_[3], _0103_[1:0] } = { _0098_[8], _0103_[2], _0098_[8] };
  assign _0105_[1:0] = { _0105_[2], _0105_[2] };
  assign _0106_[1:0] = { _0106_[2], _0106_[2] };
  assign _0107_[2:0] = { _0098_[8], _0098_[8], _0098_[8] };
  assign _0108_[1:0] = { _0108_[2], _0108_[2] };
  assign { _0114_[30:19], _0114_[2:0] } = { _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], _0114_[31], 3'h7 };
  assign _0115_[31:19] = 13'h1fff;
  assign { _0116_[30:20], _0116_[3:0] } = { _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], _0116_[31], \uart_rx_inst.prescale_reg [3:0] };
  assign _0118_[30:0] = { _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], _0118_[31], 3'h7 };
  assign _0119_[31:4] = 28'hfffffff;
  assign _0120_[30:0] = { _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], _0120_[31], \uart_rx_inst.bit_cnt  };
  assign { _0121_[30:3], _0121_[0] } = { _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], _0121_[31], \uart_rx_inst.bit_cnt [0] };
  assign { _0122_[30:4], _0122_[0] } = { _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0122_[31], _0119_[0] };
  assign _0123_[30:0] = { _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0123_[31], _0121_[2:1], \uart_rx_inst.bit_cnt [0] };
  assign { _0124_[30:4], _0124_[2:0] } = { _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0124_[31], _0122_[2:1], _0119_[0] };
  assign { _0125_[30:19], _0125_[0] } = { _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], _0125_[31], \uart_rx_inst.prescale_reg [0] };
  assign { _0126_[30:20], _0126_[0] } = { _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0126_[31], _0115_[0] };
  assign { _0127_[30:19], _0127_[3:0] } = { _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], _0127_[31], prescale[0], 3'h0 };
  assign { _0128_[31:19], _0128_[2:0] } = 16'hfffe;
  assign { _0129_[30:20], _0129_[3:0] } = { _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0129_[31], _0128_[3], 3'h7 };
  assign { _0130_[30:17], _0130_[3:0] } = { _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0130_[31], _0127_[4], prescale[0], 2'h1 };
  assign { _0131_[30:18], _0131_[4:0] } = { _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0131_[31], _0129_[5:4], _0128_[3], 2'h2 };
  assign { _0132_[30:3], _0132_[0] } = { _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], _0132_[31], \uart_tx_inst.bit_cnt [0] };
  assign { _0133_[31:4], _0133_[0] } = { 28'hfffffff, \uart_tx_inst.bit_cnt [0] };
  assign _0134_[30:4] = { _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31], _0134_[31] };
  assign { _0136_[30:19], _0136_[2:0] } = { _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], _0136_[31], 3'h7 };
  assign _0137_[31:19] = 13'h1fff;
  assign { _0138_[30:20], _0138_[3:0] } = { _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], _0138_[31], \uart_tx_inst.prescale_reg [3:0] };
  assign { _0140_[30:19], _0140_[0] } = { _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], _0140_[31], \uart_tx_inst.prescale_reg [0] };
  assign { _0141_[30:20], _0141_[0] } = { _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0141_[31], _0137_[0] };
  assign m_axis_tdata = \uart_rx_inst.m_axis_tdata_reg ;
  assign m_axis_tvalid = \uart_rx_inst.m_axis_tvalid_reg ;
  assign rx_busy = \uart_rx_inst.busy_reg ;
  assign rx_frame_error = \uart_rx_inst.frame_error_reg ;
  assign rx_overrun_error = \uart_rx_inst.overrun_error_reg ;
  assign s_axis_tready = \uart_tx_inst.s_axis_tready_reg ;
  assign tx_busy = \uart_tx_inst.busy_reg ;
  assign txd = \uart_tx_inst.txd_reg ;
  assign \uart_rx_inst.busy  = \uart_rx_inst.busy_reg ;
  assign \uart_rx_inst.clk  = clk;
  assign \uart_rx_inst.frame_error  = \uart_rx_inst.frame_error_reg ;
  assign \uart_rx_inst.m_axis_tdata  = \uart_rx_inst.m_axis_tdata_reg ;
  assign \uart_rx_inst.m_axis_tready  = m_axis_tready;
  assign \uart_rx_inst.m_axis_tvalid  = \uart_rx_inst.m_axis_tvalid_reg ;
  assign \uart_rx_inst.overrun_error  = \uart_rx_inst.overrun_error_reg ;
  assign \uart_rx_inst.prescale  = prescale;
  assign \uart_rx_inst.rst  = rst;
  assign \uart_rx_inst.rxd  = rxd;
  assign \uart_tx_inst.busy  = \uart_tx_inst.busy_reg ;
  assign \uart_tx_inst.clk  = clk;
  assign \uart_tx_inst.prescale  = prescale;
  assign \uart_tx_inst.rst  = rst;
  assign \uart_tx_inst.s_axis_tdata  = s_axis_tdata;
  assign \uart_tx_inst.s_axis_tready  = \uart_tx_inst.s_axis_tready_reg ;
  assign \uart_tx_inst.s_axis_tvalid  = s_axis_tvalid;
  assign \uart_tx_inst.txd  = \uart_tx_inst.txd_reg ;
endmodule
