/* Generated by Yosys 0.51+85 (git sha1 d3aec12fe, clang++ 18.1.8 -fPIC -O3) */

(* dynports =  1  *)
(* hdlname = "uart_rx" *)
(* src = "uart_rx.v:32.1-142.10" *)
module \$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000 (clk, rst, m_axis_tdata, m_axis_tvalid, m_axis_tready, rxd, busy, overrun_error, frame_error, prescale);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  (* src = "uart_rx.v:77.11-77.18" *)
  reg [3:0] bit_cnt = 4'h0;
  (* src = "uart_rx.v:55.35-55.39" *)
  output busy;
  wire busy;
  (* src = "uart_rx.v:71.5-71.13" *)
  reg busy_reg = 1'h0;
  (* src = "uart_rx.v:37.35-37.38" *)
  input clk;
  wire clk;
  (* src = "uart_rx.v:75.22-75.30" *)
  reg [7:0] data_reg = 8'h00;
  (* src = "uart_rx.v:57.35-57.46" *)
  output frame_error;
  wire frame_error;
  (* src = "uart_rx.v:73.5-73.20" *)
  reg frame_error_reg = 1'h0;
  (* src = "uart_rx.v:43.35-43.47" *)
  output [7:0] m_axis_tdata;
  wire [7:0] m_axis_tdata;
  (* src = "uart_rx.v:66.22-66.38" *)
  reg [7:0] m_axis_tdata_reg = 8'h00;
  (* src = "uart_rx.v:45.35-45.48" *)
  input m_axis_tready;
  wire m_axis_tready;
  (* src = "uart_rx.v:44.35-44.48" *)
  output m_axis_tvalid;
  wire m_axis_tvalid;
  (* src = "uart_rx.v:67.5-67.22" *)
  reg m_axis_tvalid_reg = 1'h0;
  (* src = "uart_rx.v:56.35-56.48" *)
  output overrun_error;
  wire overrun_error;
  (* src = "uart_rx.v:72.5-72.22" *)
  reg overrun_error_reg = 1'h0;
  (* src = "uart_rx.v:62.35-62.43" *)
  input [15:0] prescale;
  wire [15:0] prescale;
  (* src = "uart_rx.v:76.12-76.24" *)
  reg [18:0] prescale_reg = 19'h00000;
  (* src = "uart_rx.v:38.35-38.38" *)
  input rst;
  wire rst;
  (* src = "uart_rx.v:50.35-50.38" *)
  input rxd;
  wire rxd;
  (* src = "uart_rx.v:69.5-69.12" *)
  reg rxd_reg = 1'h1;
  assign _008_ = ~rxd_reg;
  assign _085_ = ~(prescale_reg[0] | prescale_reg[1]);
  assign _096_ = ~(prescale_reg[2] | prescale_reg[3]);
  assign _279_ = _096_ & _085_;
  assign _114_ = ~(prescale_reg[5] | prescale_reg[4]);
  assign _134_ = ~(prescale_reg[7] | prescale_reg[6]);
  assign _280_ = _134_ & _114_;
  assign _281_ = _280_ & _279_;
  assign _221_ = ~(prescale_reg[15] | prescale_reg[14]);
  assign _282_ = prescale_reg[13] | prescale_reg[12];
  assign _283_ = _221_ & ~(_282_);
  assign _156_ = ~(prescale_reg[9] | prescale_reg[8]);
  assign _179_ = ~(prescale_reg[11] | prescale_reg[10]);
  assign _284_ = ~(_179_ & _156_);
  assign _285_ = _283_ & ~(_284_);
  assign _286_ = ~(_285_ & _281_);
  assign _287_ = prescale_reg[17] | prescale_reg[16];
  assign _288_ = _287_ | prescale_reg[18];
  assign _289_ = _288_ | _286_;
  assign _290_ = _289_ | rst;
  assign _291_ = bit_cnt[3] | bit_cnt[2];
  assign _292_ = ~(bit_cnt[3] | bit_cnt[2]);
  assign _293_ = ~(bit_cnt[0] | bit_cnt[1]);
  assign _009_ = _292_ & ~(_293_);
  assign _010_ = _009_ | _291_;
  assign _011_ = bit_cnt[0] & ~(bit_cnt[1]);
  assign _012_ = _011_ & _292_;
  assign _013_ = _010_ & ~(_012_);
  assign _014_ = bit_cnt[0] | bit_cnt[1];
  assign _007_ = _292_ & ~(_014_);
  assign _015_ = ~_007_;
  assign _016_ = _013_ | ~(_015_);
  assign _017_ = _016_ | _290_;
  assign _018_ = ~(_012_ & rxd_reg);
  assign _019_ = bit_cnt[3] & bit_cnt[2];
  assign _020_ = bit_cnt[2] | ~(bit_cnt[3]);
  assign _021_ = ~(_020_ | _293_);
  assign _022_ = _021_ | _019_;
  assign _023_ = _011_ & ~(_020_);
  assign _024_ = _022_ & ~(_023_);
  assign _025_ = _024_ | _018_;
  assign _006_ = _025_ | _017_;
  assign _026_ = _015_ & ~(_024_);
  assign _027_ = _012_ | _010_;
  assign _028_ = _026_ & ~(_027_);
  assign _029_ = _007_ & ~(_008_);
  assign _030_ = _029_ | _028_;
  assign _031_ = _085_ & ~(_030_);
  assign _032_ = ~(_114_ & _096_);
  assign _033_ = _031_ & ~(_032_);
  assign _034_ = ~(_156_ & _134_);
  assign _035_ = _282_ | ~(_179_);
  assign _036_ = _035_ | _034_;
  assign _037_ = _033_ & ~(_036_);
  assign _038_ = _287_ | ~(_221_);
  assign _039_ = _038_ | prescale_reg[18];
  assign _000_ = _037_ & ~(_039_);
  assign _040_ = _289_ | ~(_029_);
  assign _041_ = _013_ | _289_;
  assign _042_ = _026_ & ~(_041_);
  assign _001_ = _040_ & ~(_042_);
  assign _043_ = _024_ & ~(_007_);
  assign _044_ = _043_ | rst;
  assign _045_ = _026_ & ~(_013_);
  assign _046_ = _045_ | _029_;
  assign _047_ = _046_ | _044_;
  assign _048_ = _279_ & ~(_047_);
  assign _049_ = _284_ | ~(_280_);
  assign _050_ = _049_ | ~(_048_);
  assign _051_ = _283_ & ~(_288_);
  assign _002_ = _051_ & ~(_050_);
  assign _052_ = _024_ | ~(_012_);
  assign _005_ = _052_ | _017_;
  assign _053_ = rxd_reg & bit_cnt[0];
  assign _054_ = bit_cnt[2] | bit_cnt[1];
  assign _055_ = _053_ & ~(_054_);
  assign _056_ = _007_ | bit_cnt[3];
  assign _057_ = _013_ | prescale_reg[0];
  assign _058_ = _057_ | _056_;
  assign _059_ = _055_ & ~(_058_);
  assign _060_ = prescale_reg[1] | prescale_reg[2];
  assign _061_ = prescale_reg[4] | prescale_reg[3];
  assign _062_ = _061_ | _060_;
  assign _063_ = prescale_reg[6] | prescale_reg[5];
  assign _064_ = prescale_reg[8] | prescale_reg[7];
  assign _065_ = _064_ | _063_;
  assign _066_ = _065_ | _062_;
  assign _067_ = _059_ & ~(_066_);
  assign _068_ = prescale_reg[10] | prescale_reg[9];
  assign _069_ = prescale_reg[12] | prescale_reg[11];
  assign _070_ = _069_ | _068_;
  assign _071_ = prescale_reg[14] | prescale_reg[13];
  assign _072_ = prescale_reg[16] | prescale_reg[15];
  assign _073_ = _072_ | _071_;
  assign _074_ = _073_ | _070_;
  assign _075_ = prescale_reg[18] | prescale_reg[17];
  assign _076_ = _075_ | _024_;
  assign _077_ = _076_ | _074_;
  assign _004_ = _067_ & ~(_077_);
  assign _078_ = ~(_007_ & _279_);
  assign _079_ = _078_ | _049_;
  assign _003_ = _051_ & ~(_079_);
  assign _080_ = ~prescale_reg[0];
  assign _081_ = ~(_024_ & rxd_reg);
  assign _082_ = _081_ & _015_;
  assign _298_ = _289_ ? _080_ : _082_;
  assign _083_ = ~(prescale_reg[0] ^ prescale_reg[1]);
  assign _084_ = _081_ | _007_;
  assign _308_ = _289_ ? _083_ : _084_;
  assign _086_ = _085_ ^ prescale_reg[2];
  assign _087_ = ~prescale[0];
  assign _088_ = _007_ ? _087_ : _081_;
  assign _309_ = _289_ ? _086_ : _088_;
  assign _089_ = _085_ & ~(prescale_reg[2]);
  assign _090_ = _089_ ^ prescale_reg[3];
  assign _091_ = ~(rxd_reg | prescale[0]);
  assign _092_ = _024_ ? _091_ : _087_;
  assign _093_ = prescale[1] ^ prescale[0];
  assign _094_ = ~_093_;
  assign _095_ = _007_ ? _094_ : _092_;
  assign _310_ = _289_ ? _090_ : _095_;
  assign _097_ = _096_ & ~(_085_);
  assign _098_ = _096_ & ~(_097_);
  assign _099_ = _098_ ^ prescale_reg[4];
  assign _100_ = _008_ & ~(_093_);
  assign _101_ = _024_ ? _100_ : _094_;
  assign _102_ = prescale[1] | prescale[0];
  assign _103_ = _102_ ^ prescale[2];
  assign _104_ = ~_103_;
  assign _105_ = _007_ ? _104_ : _101_;
  assign _311_ = _289_ ? _099_ : _105_;
  assign _106_ = _098_ & ~(prescale_reg[4]);
  assign _107_ = _106_ ^ prescale_reg[5];
  assign _108_ = _008_ & ~(_103_);
  assign _109_ = _024_ ? _108_ : _104_;
  assign _110_ = ~(_102_ | prescale[2]);
  assign _111_ = ~(_110_ ^ prescale[3]);
  assign _112_ = ~_111_;
  assign _113_ = _007_ ? _112_ : _109_;
  assign _312_ = _289_ ? _107_ : _113_;
  assign _115_ = _114_ & ~(_098_);
  assign _116_ = _114_ & ~(_115_);
  assign _117_ = _116_ ^ prescale_reg[6];
  assign _118_ = _008_ & ~(_111_);
  assign _119_ = _024_ ? _118_ : _112_;
  assign _120_ = prescale[3] | prescale[2];
  assign _121_ = _102_ & ~(_120_);
  assign _122_ = _121_ | _120_;
  assign _123_ = _122_ ^ prescale[4];
  assign _124_ = ~_123_;
  assign _125_ = _007_ ? _124_ : _119_;
  assign _313_ = _289_ ? _117_ : _125_;
  assign _126_ = _116_ & ~(prescale_reg[6]);
  assign _127_ = _126_ ^ prescale_reg[7];
  assign _128_ = _008_ & ~(_123_);
  assign _129_ = _024_ ? _128_ : _124_;
  assign _130_ = ~(_122_ | prescale[4]);
  assign _131_ = ~(_130_ ^ prescale[5]);
  assign _132_ = ~_131_;
  assign _133_ = _007_ ? _132_ : _129_;
  assign _314_ = _289_ ? _127_ : _133_;
  assign _135_ = _134_ & ~(_114_);
  assign _136_ = _134_ & ~(_135_);
  assign _137_ = _280_ & ~(_098_);
  assign _138_ = _136_ & ~(_137_);
  assign _139_ = _138_ ^ prescale_reg[8];
  assign _140_ = _008_ & ~(_131_);
  assign _141_ = _024_ ? _140_ : _132_;
  assign _142_ = prescale[5] | prescale[4];
  assign _143_ = _122_ & ~(_142_);
  assign _144_ = ~(_143_ | _142_);
  assign _145_ = ~(_144_ ^ prescale[6]);
  assign _146_ = ~_145_;
  assign _147_ = _007_ ? _146_ : _141_;
  assign _315_ = _289_ ? _139_ : _147_;
  assign _148_ = _138_ & ~(prescale_reg[8]);
  assign _149_ = _148_ ^ prescale_reg[9];
  assign _150_ = _008_ & ~(_145_);
  assign _151_ = _024_ ? _150_ : _146_;
  assign _152_ = _144_ & ~(prescale[6]);
  assign _153_ = ~(_152_ ^ prescale[7]);
  assign _154_ = ~_153_;
  assign _155_ = _007_ ? _154_ : _151_;
  assign _316_ = _289_ ? _149_ : _155_;
  assign _157_ = _156_ & ~(_138_);
  assign _158_ = _156_ & ~(_157_);
  assign _159_ = _158_ ^ prescale_reg[10];
  assign _160_ = _008_ & ~(_153_);
  assign _161_ = _024_ ? _160_ : _154_;
  assign _162_ = prescale[7] | prescale[6];
  assign _163_ = _142_ & ~(_162_);
  assign _164_ = _163_ | _162_;
  assign _165_ = _162_ | _142_;
  assign _166_ = _122_ & ~(_165_);
  assign _167_ = _166_ | _164_;
  assign _168_ = _167_ ^ prescale[8];
  assign _169_ = ~_168_;
  assign _170_ = _007_ ? _169_ : _161_;
  assign _299_ = _289_ ? _159_ : _170_;
  assign _171_ = _158_ & ~(prescale_reg[10]);
  assign _172_ = _171_ ^ prescale_reg[11];
  assign _173_ = _008_ & ~(_168_);
  assign _174_ = _024_ ? _173_ : _169_;
  assign _175_ = ~(_167_ | prescale[8]);
  assign _176_ = ~(_175_ ^ prescale[9]);
  assign _177_ = ~_176_;
  assign _178_ = _007_ ? _177_ : _174_;
  assign _300_ = _289_ ? _172_ : _178_;
  assign _180_ = _179_ & ~(_156_);
  assign _181_ = _179_ & ~(_180_);
  assign _182_ = ~(_138_ | _284_);
  assign _183_ = _181_ & ~(_182_);
  assign _184_ = _183_ ^ prescale_reg[12];
  assign _185_ = _008_ & ~(_176_);
  assign _186_ = _024_ ? _185_ : _177_;
  assign _187_ = prescale[9] | prescale[8];
  assign _188_ = _167_ & ~(_187_);
  assign _189_ = ~(_188_ | _187_);
  assign _190_ = _189_ ^ prescale[10];
  assign _191_ = _007_ ? _190_ : _186_;
  assign _301_ = _289_ ? _184_ : _191_;
  assign _192_ = _183_ & ~(prescale_reg[12]);
  assign _193_ = _192_ ^ prescale_reg[13];
  assign _194_ = _190_ & ~(rxd_reg);
  assign _195_ = _024_ ? _194_ : _190_;
  assign _196_ = _189_ & ~(prescale[10]);
  assign _197_ = _196_ ^ prescale[11];
  assign _198_ = _007_ ? _197_ : _195_;
  assign _302_ = _289_ ? _193_ : _198_;
  assign _199_ = ~prescale_reg[14];
  assign _200_ = ~(prescale_reg[13] | prescale_reg[12]);
  assign _201_ = ~(_183_ | _282_);
  assign _202_ = _201_ | ~(_200_);
  assign _203_ = _202_ ^ _199_;
  assign _204_ = _197_ & ~(rxd_reg);
  assign _205_ = _024_ ? _204_ : _197_;
  assign _206_ = prescale[11] | prescale[10];
  assign _207_ = _187_ & ~(_206_);
  assign _208_ = _207_ | _206_;
  assign _209_ = _206_ | _187_;
  assign _210_ = _167_ & ~(_209_);
  assign _211_ = ~(_210_ | _208_);
  assign _212_ = _211_ ^ prescale[12];
  assign _213_ = _007_ ? _212_ : _205_;
  assign _303_ = _289_ ? _203_ : _213_;
  assign _214_ = _199_ & ~(_202_);
  assign _215_ = _214_ ^ prescale_reg[15];
  assign _216_ = _212_ & ~(rxd_reg);
  assign _217_ = _024_ ? _216_ : _212_;
  assign _218_ = _211_ & ~(prescale[12]);
  assign _219_ = _218_ ^ prescale[13];
  assign _220_ = _007_ ? _219_ : _217_;
  assign _304_ = _289_ ? _215_ : _220_;
  assign _222_ = _221_ & ~(_200_);
  assign _223_ = _221_ & ~(_222_);
  assign _224_ = _283_ & ~(_181_);
  assign _225_ = _223_ & ~(_224_);
  assign _226_ = _285_ & ~(_138_);
  assign _227_ = _225_ & ~(_226_);
  assign _228_ = _227_ ^ prescale_reg[16];
  assign _229_ = _219_ & ~(rxd_reg);
  assign _230_ = _024_ ? _229_ : _219_;
  assign _231_ = prescale[13] | prescale[12];
  assign _232_ = ~(_231_ | _211_);
  assign _233_ = ~(_232_ | _231_);
  assign _234_ = _233_ ^ prescale[14];
  assign _235_ = _007_ ? _234_ : _230_;
  assign _305_ = _289_ ? _228_ : _235_;
  assign _236_ = _227_ & ~(prescale_reg[16]);
  assign _237_ = _236_ ^ prescale_reg[17];
  assign _238_ = _234_ & ~(rxd_reg);
  assign _239_ = _024_ ? _238_ : _234_;
  assign _240_ = _233_ & ~(prescale[14]);
  assign _241_ = _240_ ^ prescale[15];
  assign _242_ = _007_ ? _241_ : _239_;
  assign _306_ = _289_ ? _237_ : _242_;
  assign _243_ = ~(prescale_reg[17] | prescale_reg[16]);
  assign _244_ = ~(_227_ | _287_);
  assign _245_ = _243_ & ~(_244_);
  assign _246_ = _245_ ^ prescale_reg[18];
  assign _247_ = _241_ & ~(rxd_reg);
  assign _248_ = _024_ ? _247_ : _241_;
  assign _249_ = ~(prescale[15] | prescale[14]);
  assign _250_ = prescale[15] | prescale[14];
  assign _251_ = _231_ & ~(_250_);
  assign _252_ = _249_ & ~(_251_);
  assign _253_ = _250_ | _231_;
  assign _254_ = _208_ & ~(_253_);
  assign _255_ = _252_ & ~(_254_);
  assign _256_ = _253_ | _209_;
  assign _257_ = _167_ & ~(_256_);
  assign _258_ = _255_ & ~(_257_);
  assign _259_ = _007_ ? _258_ : _248_;
  assign _307_ = _289_ ? _246_ : _259_;
  assign _260_ = rxd_reg | bit_cnt[0];
  assign _261_ = _024_ ? _260_ : bit_cnt[0];
  assign _294_ = _015_ & ~(_261_);
  assign _262_ = bit_cnt[0] ^ bit_cnt[1];
  assign _263_ = _262_ | rxd_reg;
  assign _264_ = _024_ ? _263_ : _262_;
  assign _295_ = ~(_264_ & _015_);
  assign _265_ = ~bit_cnt[2];
  assign _266_ = _293_ ^ _265_;
  assign _267_ = _266_ | rxd_reg;
  assign _268_ = _024_ ? _267_ : _266_;
  assign _296_ = _015_ & ~(_268_);
  assign _269_ = _293_ & ~(bit_cnt[2]);
  assign _270_ = ~(_269_ ^ bit_cnt[3]);
  assign _271_ = _270_ | rxd_reg;
  assign _272_ = _024_ ? _271_ : _270_;
  assign _297_ = ~(_272_ & _015_);
  assign _273_ = m_axis_tvalid_reg & ~(m_axis_tready);
  assign _274_ = _273_ | rxd_reg;
  assign _275_ = _012_ ? _274_ : _273_;
  assign _276_ = _013_ ? _273_ : _275_;
  assign _277_ = _024_ ? _273_ : _276_;
  assign _278_ = _007_ ? _273_ : _277_;
  assign _317_ = _289_ ? _273_ : _278_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[0] <= 1'h0;
      else data_reg[0] <= data_reg[1];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[1] <= 1'h0;
      else data_reg[1] <= data_reg[2];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[2] <= 1'h0;
      else data_reg[2] <= data_reg[3];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[3] <= 1'h0;
      else data_reg[3] <= data_reg[4];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[4] <= 1'h0;
      else data_reg[4] <= data_reg[5];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[5] <= 1'h0;
      else data_reg[5] <= data_reg[6];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[6] <= 1'h0;
      else data_reg[6] <= data_reg[7];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_002_)
      if (_007_) data_reg[7] <= 1'h0;
      else data_reg[7] <= rxd_reg;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[0] <= 1'h0;
    else if (_000_) bit_cnt[0] <= _294_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[1] <= 1'h0;
    else if (_000_) bit_cnt[1] <= _295_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[2] <= 1'h0;
    else if (_000_) bit_cnt[2] <= _296_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[3] <= 1'h0;
    else if (_000_) bit_cnt[3] <= _297_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[0] <= 1'h0;
    else if (_001_) prescale_reg[0] <= _298_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[1] <= 1'h0;
    else if (_001_) prescale_reg[1] <= _308_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[2] <= 1'h0;
    else if (_001_) prescale_reg[2] <= _309_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[3] <= 1'h0;
    else if (_001_) prescale_reg[3] <= _310_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[4] <= 1'h0;
    else if (_001_) prescale_reg[4] <= _311_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[5] <= 1'h0;
    else if (_001_) prescale_reg[5] <= _312_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[6] <= 1'h0;
    else if (_001_) prescale_reg[6] <= _313_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[7] <= 1'h0;
    else if (_001_) prescale_reg[7] <= _314_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[8] <= 1'h0;
    else if (_001_) prescale_reg[8] <= _315_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[9] <= 1'h0;
    else if (_001_) prescale_reg[9] <= _316_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[10] <= 1'h0;
    else if (_001_) prescale_reg[10] <= _299_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[11] <= 1'h0;
    else if (_001_) prescale_reg[11] <= _300_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[12] <= 1'h0;
    else if (_001_) prescale_reg[12] <= _301_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[13] <= 1'h0;
    else if (_001_) prescale_reg[13] <= _302_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[14] <= 1'h0;
    else if (_001_) prescale_reg[14] <= _303_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[15] <= 1'h0;
    else if (_001_) prescale_reg[15] <= _304_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[16] <= 1'h0;
    else if (_001_) prescale_reg[16] <= _305_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[17] <= 1'h0;
    else if (_001_) prescale_reg[17] <= _306_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[18] <= 1'h0;
    else if (_001_) prescale_reg[18] <= _307_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_005_) frame_error_reg <= 1'h0;
    else frame_error_reg <= _008_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (_006_) overrun_error_reg <= 1'h0;
    else overrun_error_reg <= m_axis_tvalid_reg;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) rxd_reg <= 1'h1;
    else rxd_reg <= rxd;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) busy_reg <= 1'h0;
    else if (_003_) busy_reg <= _008_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tvalid_reg <= 1'h0;
    else m_axis_tvalid_reg <= _317_;
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[0] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[0] <= data_reg[0];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[1] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[1] <= data_reg[1];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[2] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[2] <= data_reg[2];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[3] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[3] <= data_reg[3];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[4] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[4] <= data_reg[4];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[5] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[5] <= data_reg[5];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[6] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[6] <= data_reg[6];
  (* src = "uart_rx.v:86.1-140.4" *)
  always @(posedge clk)
    if (rst) m_axis_tdata_reg[7] <= 1'h0;
    else if (_004_) m_axis_tdata_reg[7] <= data_reg[7];
  assign busy = busy_reg;
  assign frame_error = frame_error_reg;
  assign m_axis_tdata = m_axis_tdata_reg;
  assign m_axis_tvalid = m_axis_tvalid_reg;
  assign overrun_error = overrun_error_reg;
endmodule

(* dynports =  1  *)
(* hdlname = "uart_tx" *)
(* src = "uart_tx.v:32.1-115.10" *)
module \$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000 (clk, rst, s_axis_tdata, s_axis_tvalid, s_axis_tready, txd, busy, prescale);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  (* src = "uart_tx.v:89.22-89.34" *)
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  (* src = "uart_tx.v:71.11-71.18" *)
  reg [3:0] bit_cnt = 4'h0;
  (* src = "uart_tx.v:55.35-55.39" *)
  output busy;
  wire busy;
  (* src = "uart_tx.v:67.5-67.13" *)
  reg busy_reg = 1'h0;
  (* src = "uart_tx.v:37.35-37.38" *)
  input clk;
  wire clk;
  (* src = "uart_tx.v:69.20-69.28" *)
  reg [8:0] data_reg = 9'h000;
  (* src = "uart_tx.v:60.35-60.43" *)
  input [15:0] prescale;
  wire [15:0] prescale;
  (* src = "uart_tx.v:70.12-70.24" *)
  reg [18:0] prescale_reg = 19'h00000;
  (* src = "uart_tx.v:38.35-38.38" *)
  input rst;
  wire rst;
  (* src = "uart_tx.v:43.35-43.47" *)
  input [7:0] s_axis_tdata;
  wire [7:0] s_axis_tdata;
  (* src = "uart_tx.v:45.35-45.48" *)
  output s_axis_tready;
  wire s_axis_tready;
  (* src = "uart_tx.v:63.5-63.22" *)
  reg s_axis_tready_reg = 1'h0;
  (* src = "uart_tx.v:44.35-44.48" *)
  input s_axis_tvalid;
  wire s_axis_tvalid;
  (* src = "uart_tx.v:50.35-50.38" *)
  output txd;
  wire txd;
  (* src = "uart_tx.v:65.5-65.12" *)
  reg txd_reg = 1'h1;
  assign _007_ = ~(bit_cnt[0] | bit_cnt[1]);
  assign _008_ = ~(bit_cnt[3] | bit_cnt[2]);
  assign _006_ = _008_ & _007_;
  assign _005_ = ~_006_;
  assign _009_ = ~(prescale_reg[1] | prescale_reg[0]);
  assign _010_ = ~(prescale_reg[2] | prescale_reg[3]);
  assign _011_ = ~(_010_ & _009_);
  assign _012_ = ~(prescale_reg[5] | prescale_reg[4]);
  assign _013_ = ~(prescale_reg[7] | prescale_reg[6]);
  assign _014_ = _013_ & _012_;
  assign _015_ = _014_ & ~(_011_);
  assign _016_ = ~(prescale_reg[9] | prescale_reg[8]);
  assign _017_ = ~(prescale_reg[11] | prescale_reg[10]);
  assign _018_ = _017_ & _016_;
  assign _019_ = ~(prescale_reg[13] | prescale_reg[12]);
  assign _020_ = ~(prescale_reg[15] | prescale_reg[14]);
  assign _021_ = ~(_020_ & _019_);
  assign _022_ = _021_ | ~(_018_);
  assign _023_ = _015_ & ~(_022_);
  assign _024_ = prescale_reg[16] | prescale_reg[17];
  assign _025_ = _024_ | prescale_reg[18];
  assign _026_ = _025_ | ~(_023_);
  assign _027_ = _026_ | s_axis_tvalid;
  assign _028_ = _027_ | _005_;
  assign _029_ = _005_ & ~(_026_);
  assign _030_ = bit_cnt[1] | ~(bit_cnt[0]);
  assign _031_ = _008_ & ~(_030_);
  assign _032_ = _008_ & ~(_007_);
  assign _033_ = _008_ & ~(_032_);
  assign _034_ = _031_ | ~(_033_);
  assign _035_ = _029_ & ~(_034_);
  assign _001_ = _028_ & ~(_035_);
  assign _036_ = _033_ | _031_;
  assign _037_ = _036_ & ~(_006_);
  assign _038_ = _037_ | prescale_reg[18];
  assign _039_ = _038_ | _024_;
  assign _040_ = _006_ & ~(s_axis_tvalid);
  assign _041_ = _040_ | rst;
  assign _042_ = _041_ | _039_;
  assign _002_ = _023_ & ~(_042_);
  assign _043_ = prescale_reg[18] | ~(_006_);
  assign _044_ = _043_ | _024_;
  assign _003_ = _023_ & ~(_044_);
  assign _045_ = _040_ | prescale_reg[18];
  assign _046_ = _045_ | _024_;
  assign _047_ = _037_ & ~(_031_);
  assign _048_ = _047_ | _046_;
  assign _000_ = _023_ & ~(_048_);
  assign _004_ = _026_ | rst;
  assign _049_ = ~(_036_ | data_reg[0]);
  assign _229_ = ~(_049_ | _006_);
  assign _050_ = ~prescale_reg[0];
  assign _051_ = _006_ | ~(_036_);
  assign _210_ = _026_ ? _050_ : _051_;
  assign _052_ = ~(prescale_reg[1] ^ prescale_reg[0]);
  assign _220_ = _026_ ? _052_ : _051_;
  assign _053_ = _009_ ^ prescale_reg[2];
  assign _221_ = _026_ ? _053_ : _051_;
  assign _054_ = _009_ & ~(prescale_reg[2]);
  assign _055_ = _054_ ^ prescale_reg[3];
  assign _056_ = ~prescale[0];
  assign _057_ = _036_ ^ _056_;
  assign _058_ = _006_ ? _056_ : _057_;
  assign _222_ = _026_ ? _055_ : _058_;
  assign _059_ = _010_ & ~(_009_);
  assign _060_ = _010_ & ~(_059_);
  assign _061_ = _060_ ^ prescale_reg[4];
  assign _062_ = ~(prescale[0] ^ prescale[1]);
  assign _063_ = _036_ ? prescale[1] : _062_;
  assign _064_ = _006_ ? _062_ : _063_;
  assign _223_ = _026_ ? _061_ : _064_;
  assign _065_ = _060_ & ~(prescale_reg[4]);
  assign _066_ = _065_ ^ prescale_reg[5];
  assign _067_ = ~prescale[2];
  assign _068_ = prescale[0] | prescale[1];
  assign _069_ = _068_ ^ _067_;
  assign _070_ = _036_ ? prescale[2] : _069_;
  assign _071_ = _006_ ? _069_ : _070_;
  assign _224_ = _026_ ? _066_ : _071_;
  assign _072_ = _012_ & ~(_060_);
  assign _073_ = _012_ & ~(_072_);
  assign _074_ = _073_ ^ prescale_reg[6];
  assign _075_ = _067_ & ~(_068_);
  assign _076_ = _075_ ^ prescale[3];
  assign _077_ = _036_ ? prescale[3] : _076_;
  assign _078_ = _006_ ? _076_ : _077_;
  assign _225_ = _026_ ? _074_ : _078_;
  assign _079_ = _073_ & ~(prescale_reg[6]);
  assign _080_ = _079_ ^ prescale_reg[7];
  assign _081_ = ~prescale[4];
  assign _082_ = prescale[3] | prescale[2];
  assign _083_ = _068_ & ~(_082_);
  assign _084_ = _083_ | _082_;
  assign _085_ = _084_ ^ _081_;
  assign _086_ = _036_ ? prescale[4] : _085_;
  assign _087_ = _006_ ? _085_ : _086_;
  assign _226_ = _026_ ? _080_ : _087_;
  assign _088_ = _013_ & ~(_012_);
  assign _089_ = _013_ & ~(_088_);
  assign _090_ = _014_ & ~(_060_);
  assign _091_ = _089_ & ~(_090_);
  assign _092_ = _091_ ^ prescale_reg[8];
  assign _093_ = _081_ & ~(_084_);
  assign _094_ = _093_ ^ prescale[5];
  assign _095_ = _036_ ? prescale[5] : _094_;
  assign _096_ = _006_ ? _094_ : _095_;
  assign _227_ = _026_ ? _092_ : _096_;
  assign _097_ = _091_ & ~(prescale_reg[8]);
  assign _098_ = _097_ ^ prescale_reg[9];
  assign _099_ = ~prescale[6];
  assign _100_ = prescale[5] | prescale[4];
  assign _101_ = _084_ & ~(_100_);
  assign _102_ = _101_ | _100_;
  assign _103_ = _102_ ^ _099_;
  assign _104_ = _036_ ? prescale[6] : _103_;
  assign _105_ = _006_ ? _103_ : _104_;
  assign _228_ = _026_ ? _098_ : _105_;
  assign _106_ = ~prescale_reg[10];
  assign _107_ = _016_ & ~(_091_);
  assign _108_ = _107_ | ~(_016_);
  assign _109_ = _108_ ^ _106_;
  assign _110_ = _099_ & ~(_102_);
  assign _111_ = _110_ ^ prescale[7];
  assign _112_ = _036_ ? prescale[7] : _111_;
  assign _113_ = _006_ ? _111_ : _112_;
  assign _211_ = _026_ ? _109_ : _113_;
  assign _114_ = _106_ & ~(_108_);
  assign _115_ = _114_ ^ prescale_reg[11];
  assign _116_ = ~prescale[8];
  assign _117_ = prescale[7] | prescale[6];
  assign _118_ = _100_ & ~(_117_);
  assign _119_ = _118_ | _117_;
  assign _120_ = _117_ | _100_;
  assign _121_ = _084_ & ~(_120_);
  assign _122_ = _121_ | _119_;
  assign _123_ = _122_ ^ _116_;
  assign _124_ = _036_ ? prescale[8] : _123_;
  assign _125_ = _006_ ? _123_ : _124_;
  assign _212_ = _026_ ? _115_ : _125_;
  assign _126_ = _017_ & ~(_016_);
  assign _127_ = _017_ & ~(_126_);
  assign _128_ = _018_ & ~(_091_);
  assign _129_ = _127_ & ~(_128_);
  assign _130_ = _129_ ^ prescale_reg[12];
  assign _131_ = _116_ & ~(_122_);
  assign _132_ = _131_ ^ prescale[9];
  assign _133_ = _036_ ? prescale[9] : _132_;
  assign _134_ = _006_ ? _132_ : _133_;
  assign _213_ = _026_ ? _130_ : _134_;
  assign _135_ = _129_ & ~(prescale_reg[12]);
  assign _136_ = _135_ ^ prescale_reg[13];
  assign _137_ = ~prescale[10];
  assign _138_ = prescale[9] | prescale[8];
  assign _139_ = _122_ & ~(_138_);
  assign _140_ = _139_ | _138_;
  assign _141_ = _140_ ^ _137_;
  assign _142_ = _036_ ? prescale[10] : _141_;
  assign _143_ = _006_ ? _141_ : _142_;
  assign _214_ = _026_ ? _136_ : _143_;
  assign _144_ = ~prescale_reg[14];
  assign _145_ = _019_ & ~(_129_);
  assign _146_ = _145_ | ~(_019_);
  assign _147_ = _146_ ^ _144_;
  assign _148_ = _137_ & ~(_140_);
  assign _149_ = _148_ ^ prescale[11];
  assign _150_ = _036_ ? prescale[11] : _149_;
  assign _151_ = _006_ ? _149_ : _150_;
  assign _215_ = _026_ ? _147_ : _151_;
  assign _152_ = _144_ & ~(_146_);
  assign _153_ = _152_ ^ prescale_reg[15];
  assign _154_ = ~prescale[12];
  assign _155_ = prescale[11] | prescale[10];
  assign _156_ = _138_ & ~(_155_);
  assign _157_ = _156_ | _155_;
  assign _158_ = _155_ | _138_;
  assign _159_ = _122_ & ~(_158_);
  assign _160_ = _159_ | _157_;
  assign _161_ = _160_ ^ _154_;
  assign _162_ = _036_ ? prescale[12] : _161_;
  assign _163_ = _006_ ? _161_ : _162_;
  assign _216_ = _026_ ? _153_ : _163_;
  assign _164_ = _020_ & ~(_019_);
  assign _165_ = _020_ & ~(_164_);
  assign _166_ = ~(_127_ | _021_);
  assign _167_ = _165_ & ~(_166_);
  assign _168_ = ~(_091_ | _022_);
  assign _169_ = _167_ & ~(_168_);
  assign _170_ = _169_ ^ prescale_reg[16];
  assign _171_ = _154_ & ~(_160_);
  assign _172_ = _171_ ^ prescale[13];
  assign _173_ = _036_ ? prescale[13] : _172_;
  assign _174_ = _006_ ? _172_ : _173_;
  assign _217_ = _026_ ? _170_ : _174_;
  assign _175_ = _169_ & ~(prescale_reg[16]);
  assign _176_ = _175_ ^ prescale_reg[17];
  assign _177_ = ~prescale[14];
  assign _178_ = ~(prescale[13] | prescale[12]);
  assign _179_ = prescale[13] | prescale[12];
  assign _180_ = _160_ & ~(_179_);
  assign _181_ = _180_ | ~(_178_);
  assign _182_ = _181_ ^ _177_;
  assign _183_ = _036_ ? prescale[14] : _182_;
  assign _184_ = _006_ ? _182_ : _183_;
  assign _218_ = _026_ ? _176_ : _184_;
  assign _185_ = ~(prescale_reg[16] | prescale_reg[17]);
  assign _186_ = ~(_169_ | _024_);
  assign _187_ = _185_ & ~(_186_);
  assign _188_ = _187_ ^ prescale_reg[18];
  assign _189_ = _177_ & ~(_181_);
  assign _190_ = _189_ ^ prescale[15];
  assign _191_ = _036_ ? prescale[15] : _190_;
  assign _192_ = _006_ ? _190_ : _191_;
  assign _219_ = _026_ ? _188_ : _192_;
  assign _205_ = ~(s_axis_tready_reg & s_axis_tvalid);
  assign _197_ = _006_ ? s_axis_tdata[0] : data_reg[1];
  assign _198_ = _006_ ? s_axis_tdata[1] : data_reg[2];
  assign _199_ = _006_ ? s_axis_tdata[2] : data_reg[3];
  assign _200_ = _006_ ? s_axis_tdata[3] : data_reg[4];
  assign _201_ = _006_ ? s_axis_tdata[4] : data_reg[5];
  assign _202_ = _006_ ? s_axis_tdata[5] : data_reg[6];
  assign _203_ = _006_ ? s_axis_tdata[6] : data_reg[7];
  assign _204_ = _006_ ? s_axis_tdata[7] : data_reg[8];
  assign _206_ = _006_ | ~(bit_cnt[0]);
  assign _193_ = ~(bit_cnt[0] ^ bit_cnt[1]);
  assign _207_ = _193_ & ~(_006_);
  assign _194_ = _007_ ^ bit_cnt[2];
  assign _208_ = _194_ & ~(_006_);
  assign _195_ = _007_ & ~(bit_cnt[2]);
  assign _196_ = _195_ ^ bit_cnt[3];
  assign _209_ = _196_ | _006_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[1] <= 1'h0;
    else if (_000_) bit_cnt[1] <= _207_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[2] <= 1'h0;
    else if (_000_) bit_cnt[2] <= _208_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[3] <= 1'h0;
    else if (_000_) bit_cnt[3] <= _209_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[0] <= 1'h0;
    else if (_001_) prescale_reg[0] <= _210_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[1] <= 1'h0;
    else if (_001_) prescale_reg[1] <= _220_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[2] <= 1'h0;
    else if (_001_) prescale_reg[2] <= _221_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[3] <= 1'h0;
    else if (_001_) prescale_reg[3] <= _222_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[4] <= 1'h0;
    else if (_001_) prescale_reg[4] <= _223_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[5] <= 1'h0;
    else if (_001_) prescale_reg[5] <= _224_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[6] <= 1'h0;
    else if (_001_) prescale_reg[6] <= _225_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[7] <= 1'h0;
    else if (_001_) prescale_reg[7] <= _226_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[8] <= 1'h0;
    else if (_001_) prescale_reg[8] <= _227_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[9] <= 1'h0;
    else if (_001_) prescale_reg[9] <= _228_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[10] <= 1'h0;
    else if (_001_) prescale_reg[10] <= _211_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[11] <= 1'h0;
    else if (_001_) prescale_reg[11] <= _212_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[12] <= 1'h0;
    else if (_001_) prescale_reg[12] <= _213_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[13] <= 1'h0;
    else if (_001_) prescale_reg[13] <= _214_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[14] <= 1'h0;
    else if (_001_) prescale_reg[14] <= _215_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[15] <= 1'h0;
    else if (_001_) prescale_reg[15] <= _216_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[16] <= 1'h0;
    else if (_001_) prescale_reg[16] <= _217_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[17] <= 1'h0;
    else if (_001_) prescale_reg[17] <= _218_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) prescale_reg[18] <= 1'h0;
    else if (_001_) prescale_reg[18] <= _219_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) busy_reg <= 1'h0;
    else if (_003_) busy_reg <= s_axis_tvalid;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[0] <= _197_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[1] <= _198_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[2] <= _199_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[3] <= _200_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[4] <= _201_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[5] <= _202_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[6] <= _203_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[7] <= _204_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_002_) data_reg[8] <= _006_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) txd_reg <= 1'h1;
    else if (_000_) txd_reg <= _229_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (_004_) s_axis_tready_reg <= 1'h0;
    else if (_006_) s_axis_tready_reg <= _205_;
  (* src = "uart_tx.v:78.1-113.4" *)
  always @(posedge clk)
    if (rst) bit_cnt[0] <= 1'h0;
    else if (_000_) bit_cnt[0] <= _206_;
  assign busy = busy_reg;
  assign s_axis_tready = s_axis_tready_reg;
  assign txd = txd_reg;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "uart.v:32.1-113.10" *)
module uart(clk, rst, s_axis_tdata, s_axis_tvalid, s_axis_tready, m_axis_tdata, m_axis_tvalid, m_axis_tready, rxd, txd, tx_busy, rx_busy, rx_overrun_error, rx_frame_error, prescale);
  (* src = "uart.v:37.35-37.38" *)
  input clk;
  wire clk;
  (* src = "uart.v:50.35-50.47" *)
  output [7:0] m_axis_tdata;
  wire [7:0] m_axis_tdata;
  (* src = "uart.v:52.35-52.48" *)
  input m_axis_tready;
  wire m_axis_tready;
  (* src = "uart.v:51.35-51.48" *)
  output m_axis_tvalid;
  wire m_axis_tvalid;
  (* src = "uart.v:71.35-71.43" *)
  input [15:0] prescale;
  wire [15:0] prescale;
  (* src = "uart.v:38.35-38.38" *)
  input rst;
  wire rst;
  (* src = "uart.v:64.35-64.42" *)
  output rx_busy;
  wire rx_busy;
  (* src = "uart.v:66.35-66.49" *)
  output rx_frame_error;
  wire rx_frame_error;
  (* src = "uart.v:65.35-65.51" *)
  output rx_overrun_error;
  wire rx_overrun_error;
  (* src = "uart.v:57.35-57.38" *)
  input rxd;
  wire rxd;
  (* src = "uart.v:43.35-43.47" *)
  input [7:0] s_axis_tdata;
  wire [7:0] s_axis_tdata;
  (* src = "uart.v:45.35-45.48" *)
  output s_axis_tready;
  wire s_axis_tready;
  (* src = "uart.v:44.35-44.48" *)
  input s_axis_tvalid;
  wire s_axis_tvalid;
  (* src = "uart.v:63.35-63.42" *)
  output tx_busy;
  wire tx_busy;
  (* src = "uart.v:58.35-58.38" *)
  output txd;
  wire txd;
  (* src = "uart.v:96.1-111.2" *)
  \$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000  uart_rx_inst (
    .busy(rx_busy),
    .clk(clk),
    .frame_error(rx_frame_error),
    .m_axis_tdata(m_axis_tdata),
    .m_axis_tready(m_axis_tready),
    .m_axis_tvalid(m_axis_tvalid),
    .overrun_error(rx_overrun_error),
    .prescale(prescale),
    .rst(rst),
    .rxd(rxd)
  );
  (* src = "uart.v:78.1-91.2" *)
  \$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000  uart_tx_inst (
    .busy(tx_busy),
    .clk(clk),
    .prescale(prescale),
    .rst(rst),
    .s_axis_tdata(s_axis_tdata),
    .s_axis_tready(s_axis_tready),
    .s_axis_tvalid(s_axis_tvalid),
    .txd(txd)
  );
endmodule
